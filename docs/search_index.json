[["index.html", "AlberdiLab | Marcos et al. 2025 Bacteria with reduced genomes positively associate with chicken body weight Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Marcos et al. 2025 Bacteria with reduced genomes positively associate with chicken body weight Sofia Marcos, Iñaki Odriozola, Ostaizka Aizpurua, Raphael Eisenhofer, Sarah Siu Tze Mak, Garazi Martin, Varsha Kale, Germana Baldi, Robert D Finn, Joan Tarradas, Andone Estonba, M Thomas P Gilbert, Antton Alberdi1 Last update: 2025-08-01 Chapter 1 Introduction This WebBook contains the code written to analyse data from the study of the functional profile of metagenome-assembled genomes and temporal trends of derived microbial communities from intensively reared broiler chickens. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/chicken_genome_reduced_bacteria.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(rmarkdown) library(janitor) # For tree handling library(ape) library(phyloseq) library(phytools) library(tidytree) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(sjPlot) library(colorspace) library(vioplot) # For statistics library(spaa) library(vegan) library(Rtsne) library(microbiome) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(Hmsc) library(MuMIn) library(corrplot) library(lme4) library(nlme) library(boot) University of Copenhagen, antton.alberdi@sund.ku.dk "],["metagenomic-data-preparation.html", "Chapter 2 Metagenomic data preparation 2.1 Load data 2.2 Distilling Genome Inferred Functional Traits (GIFTs) 2.3 Create working objects 2.4 Prepare color scheme 2.5 Wrap working objects", " Chapter 2 Metagenomic data preparation 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Chicken sample metadata chicken_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;) %&gt;% mutate(sampling_time = factor(sampling_time, levels = c(&#39;7&#39;, &#39;21&#39;, &#39;35&#39;))) 2.1.2 Taxonomy of metagenome-assembled genomes genome_taxonomy &lt;- read_tsv(&quot;data/taxonomy.tsv&quot;) %&gt;% rename(genome = 1) %&gt;% mutate(phylum = case_when( phylum == &quot;Actinobacteriota&quot; ~ &quot;Actinomycetota&quot;, phylum == &quot;Firmicutes&quot; ~ &quot;Bacillota&quot;, phylum == &quot;Firmicutes_A&quot; ~ &quot;Bacillota_A&quot;, phylum == &quot;Firmicutes_B&quot; ~ &quot;Bacillota_B&quot;, phylum == &quot;Firmicutes_C&quot; ~ &quot;Bacillota_C&quot;, phylum == &quot;Cyanobacteria&quot; ~ &quot;Cyanobacteriota&quot;, phylum == &quot;Proteobacteria&quot; ~ &quot;Pseudomonadota&quot;, TRUE ~ phylum)) %&gt;% filter(!domain == &quot;Archaea&quot;) 2.1.3 Genome statistics genome_stats &lt;- read_tsv(&quot;data/stats.tsv&quot;) %&gt;% rename(genome = 1) %&gt;% mutate(correction_factor = median(mag_length) / mag_length) %&gt;% filter(genome %in% genome_taxonomy$genome) %&gt;% arrange(match(genome, genome_taxonomy$genome)) 2.1.4 Phylogenetic tree genome_tree &lt;- read_tree(&quot;data/tree.nwk&quot;) 2.1.5 Raw gene annotations if(!file.exists(&quot;data/gene_annotations.tsv.xz&quot;)){ download.file( url = &#39;https://sid.erda.dk/share_redirect/Bd8UfDO2D6/gene_annotations.tsv.xz&#39;, destfile = &#39;data/gene_annotations.tsv.xz&#39;, method = &#39;curl&#39; ) } genome_annotations &lt;- read_tsv(&quot;data/gene_annotations.tsv.xz&quot;) 2.1.6 DRAM functional annotations genome_kegg_paths &lt;- read_tsv(&quot;data/dram.tsv&quot;) %&gt;% rename(genome = 1) %&gt;% filter(genome %in% genome_taxonomy$genome) %&gt;% select(1:400) 2.1.7 Metagenomic read counts read_counts &lt;- read_tsv(&quot;data/mag_counts.tsv&quot;) %&gt;% rename(genome = 1) %&gt;% filter(genome %in% genome_taxonomy$genome) 2.2 Distilling Genome Inferred Functional Traits (GIFTs) 2.2.1 Distilling DRAM annotations gifts_raw &lt;- distill(genome_annotations, GIFT_db2, genomecol = 2, annotcol = c(9,10,19), verbosity = F) # Load ENA to genome_id table ena_to_mag_id &lt;- read_tsv(&quot;data/ena_to_mag_id.tsv&quot;) gifts_matrix &lt;- gifts_raw %&gt;% data.frame() %&gt;% rownames_to_column(var = &#39;mag_name&#39;) %&gt;% left_join(ena_to_mag_id %&gt;% select(mag_name, mag_id), by = &#39;mag_name&#39;) %&gt;% select(-mag_name) %&gt;% relocate(mag_id) %&gt;% filter(mag_id %in% genome_taxonomy$genome) %&gt;% column_to_rownames(&#39;mag_id&#39;) %&gt;% as.matrix() 2.2.2 Perform completeness correction for GIFTs # Aggregate into compound level gifts_elements &lt;- to.elements(gifts_matrix, GIFT_db2) # Aggregate into function level gifts_functions &lt;- to.functions(gifts_elements, GIFT_db2) # Aggregate into overall domain level gifts_domains &lt;- to.domains(gifts_functions, GIFT_db2) 2.3 Create working objects Transform the original data files into working objects for downstream analyses. 2.3.1 Transform reads into genome counts mag_weighted &lt;- read_counts %&gt;% column_to_rownames(var = &#39;genome&#39;) %&gt;% mutate(across(where(is.numeric), ~ ./ genome_stats$correction_factor)) %&gt;% t() %&gt;% as.data.frame() 2.3.2 Calculate relative abundances # Relative abundances total &lt;- decostand(mag_weighted, &#39;total&#39;) %&gt;% t() %&gt;% as.data.frame() # Square root of relative abundances hel &lt;- decostand(mag_weighted, &#39;hellinger&#39;) %&gt;% t() %&gt;% as.data.frame() # Transpose matrix mag_weighted &lt;- mag_weighted %&gt;% t() %&gt;% as.data.frame() 2.3.3 Prepare a phyloseq object phylo_samples &lt;- chicken_metadata %&gt;% mutate(sampling_time = as.factor(sampling_time), trial_age = paste(trial, sampling_time, sep = &quot;_&quot;), trial_age = as.factor(trial_age)) %&gt;% column_to_rownames(&quot;animal_code&quot;) %&gt;% sample_data() # Convert to phyloseq sample_data object phylo_genome &lt;- otu_table(total, taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_taxonomy %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% as.matrix() %&gt;% tax_table() # Convert to phyloseq tax_table object phylo_tree &lt;- phy_tree(genome_tree) phylo_seq &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples, phylo_tree) 2.4 Prepare color scheme # As dataframe taxonomy_colors &lt;- read_tsv(&quot;data/taxonomy_colours.tsv&quot;) # As vector phylum_colors &lt;- c(Halobacteriota = &quot;#f2f2f2&quot;, Methanobacteriota = &quot;#bfbfbf&quot;, Patescibacteria = &quot;#dacce3&quot;, Campylobacterota = &quot;#cdadca&quot;, Synergistota = &quot;#c08eb3&quot;, Thermoplasmatota = &quot;#777dae&quot;, Verrucomicrobiota = &quot;#0066ae&quot;, Desulfobacterota = &quot;#68b0dc&quot;, Pseudomonadota = &quot;#60cfde&quot;, Bacteroidota = &quot;#4dc87c&quot;, Cyanobacteriota = &quot;#92e09f&quot;, Actinomycetota = &quot;#c9e0af&quot;, Deferribacterota = &quot;#dff77e&quot;, Bacillota = &quot;#ffd366&quot;, Bacillota_A = &quot;#fd8854&quot;, Bacillota_B = &quot;#8b1222&quot;, Bacillota_C = &quot;#5a0c37&quot;) order_colors &lt;- c(Methanomicrobiales = &quot;#f2f2f2&quot;, Methanobacteriales = &quot;#bfbfbf&quot;, Saccharimonadales = &quot;#dacce3&quot;, Campylobacterales = &quot;#cdadca&quot;, Synergistales = &quot;#c08eb3&quot;, Methanomassiliicoccales = &quot;#777dae&quot;, Victivallales = &quot;#0066ae&quot;, Opitutales = &quot;#1c7ebc&quot;, Verrucomicrobiales = &quot;#4a96cc&quot;, Desulfovibrionales = &quot;#68b0dc&quot;, Enterobacterales = &quot;#60cfde&quot;, RF32 = &quot;#60dfd2&quot;, Burkholderiales = &quot;#5cdfb5&quot;, &#39;Rs-D84&#39; = &quot;#40df91&quot;, Bacteroidales = &quot;#4dc87c&quot;, Flavobacteriales = &quot;#88c88b&quot;, Gastranaerophilales = &quot;#92e09f&quot;, Coriobacteriales = &quot;#c9e0af&quot;, Actinomycetales = &quot;#d8e093&quot;, Deferribacterales = &quot;#dff77e&quot;, RF39 = &quot;#ecf76d&quot;, Lactobacillales = &quot;#feef68&quot;, &#39;ML615J-28&#39; = &quot;#fde671&quot;, Erysipelotrichales = &quot;#ffd366&quot;, Acholeplasmatales = &quot;#fdc151&quot;, Bacillales = &quot;#fc953d&quot;, RFN20 = &quot;#fd8035&quot;, Oscillospirales = &quot;#fd8854&quot;, TANB77 = &quot;#f4814d&quot;, Christensenellales = &quot;#c26340&quot;, Lachnospirales = &quot;#c28c5c&quot;, Clostridiales = &quot;#ce9360&quot;, Monoglobales_A = &quot;#ce734f&quot;, Peptostreptococcales = &quot;#c65631&quot;, Monoglobales = &quot;#b93725&quot;, UBA1212 = &quot;#b10f19&quot;, UBA4068 = &quot;#8b1222&quot;, Selenomonadales = &quot;#7a1a12&quot;, Acidaminococcales = &quot;#64121f&quot;, Veillonellales = &quot;#5a0c37&quot;) sampling_day_colors &lt;- c(&#39;#E69F00&#39;, &#39;#CC6677&#39;, &#39;#56B4E9&#39;) 2.5 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save( # Chicken data chicken_metadata, # Bacterial genome data genome_taxonomy, genome_stats, genome_tree, genome_kegg_paths, read_counts, # Transformed data mag_weighted, total, hel, # Phyloseq objects phylo_seq, # Functions gifts_elements, gifts_functions, gifts_domains, # Colors taxonomy_colors, phylum_colors, order_colors, sampling_day_colors, # Define file path file = &quot;data/data_mg.Rdata&quot;) rm(list = ls()) "],["metatranscriptomic-data-preparation.html", "Chapter 3 Metatranscriptomic data preparation 3.1 Load data 3.2 Save working objects", " Chapter 3 Metatranscriptomic data preparation 3.1 Load data 3.1.1 Metatranscriptomic gene expression counts if(!file.exists(&quot;data/gene_expressions.tsv.xz&quot;)){ download.file( url = &#39;https://sid.erda.dk/share_redirect/Bd8UfDO2D6/gene_expressions.tsv.xz&#39;, destfile = &#39;data/gene_expressions.tsv.xz&#39;, method = &#39;curl&#39; ) } gene_expr &lt;- read_tsv(&quot;data/gene_expressions.tsv.xz&quot;) %&gt;% select(1:129) %&gt;% rename(mag_name = &#39;MAG&#39;) %&gt;% relocate(mag_name) # Chunk analysis to sets of 100 MAGs mags &lt;- sort(unique(gene_expr$mag_name)) gene_expr_1 &lt;- gene_expr[gene_expr$mag_name %in% mags[c(1:100)],c(2:129)] gene_expr_2 &lt;- gene_expr[gene_expr$mag_name %in% mags[c(101:200)],c(2:129)] gene_expr_3 &lt;- gene_expr[gene_expr$mag_name %in% mags[c(201:300)],c(2:129)] gene_expr_4 &lt;- gene_expr[gene_expr$mag_name %in% mags[c(301:400)],c(2:129)] gene_expr_5 &lt;- gene_expr[gene_expr$mag_name %in% mags[c(401:500)],c(2:129)] gene_expr_6 &lt;- gene_expr[gene_expr$mag_name %in% mags[c(501:600)],c(2:129)] gene_expr_7 &lt;- gene_expr[gene_expr$mag_name %in% mags[c(601:700)],c(2:129)] gene_expr_8 &lt;- gene_expr[gene_expr$mag_name %in% mags[c(701:825)],c(2:129)] save(gene_expr_1, file = &quot;data/gene_expr_1.Rdata&quot;) save(gene_expr_2, file = &quot;data/gene_expr_2.Rdata&quot;) save(gene_expr_3, file = &quot;data/gene_expr_3.Rdata&quot;) save(gene_expr_4, file = &quot;data/gene_expr_4.Rdata&quot;) save(gene_expr_5, file = &quot;data/gene_expr_5.Rdata&quot;) save(gene_expr_6, file = &quot;data/gene_expr_6.Rdata&quot;) save(gene_expr_7, file = &quot;data/gene_expr_7.Rdata&quot;) save(gene_expr_8, file = &quot;data/gene_expr_8.Rdata&quot;) rm(list = ls()) 3.1.2 Distillation mag_ann &lt;- read_tsv(&quot;data/gene_annotations.tsv.xz&quot;) %&gt;% mutate(gene_length = end_position - start_position) # Chunk analysis load(&quot;data/gene_expr_1.Rdata&quot;) distq_1 &lt;- distillq(gene_expr_1, mag_ann, GIFT_db2, genecol = 1, genomecol = 2, annotcol = c(9, 10, 19)) save(distilled_caecum_1, file = &quot;data/distilled_caecum_1.Rdata&quot;) rm(gene_expr_1, distilled_caecum_1) load(&quot;data/gene_expr_2.Rdata&quot;) distq_2 &lt;- distillq(gene_expr_2, mag_ann, GIFT_db2, genecol = 1, genomecol = 2, annotcol = c(9, 10, 19)) save(distilled_caecum_2, file = &quot;data/distilled_caecum_2.Rdata&quot;) rm(gene_expr_2, distilled_caecum_2) load(&quot;data/gene_expr_3.Rdata&quot;) distq_3 &lt;- distillq(gene_expr_3, mag_ann, GIFT_db2, genecol = 1, genomecol = 2, annotcol = c(9, 10, 19)) save(distilled_caecum_3, file = &quot;results/tables/distilled_caecum_3.Rdata&quot;) rm(gene_expr_3, distilled_caecum_3) load(&quot;data/gene_expr_4.Rdata&quot;) distq_4 &lt;- distillq(gene_expr_4, mag_ann, GIFT_db2, genecol = 1, genomecol = 2, annotcol = c(9, 10, 19)) save(distilled_caecum_4, file = &quot;results/tables/distilled_caecum_4.Rdata&quot;) rm(gene_expr_4, distilled_caecum_4) load(&quot;data/gene_expr_5.Rdata&quot;) distq_5 &lt;- distillq(gene_expr_5, mag_ann, GIFT_db2, genecol = 1, genomecol = 2, annotcol = c(9, 10, 19)) save(distilled_caecum_5, file = &quot;results/tables/distilled_caecum_5.Rdata&quot;) rm(gene_expr_5, distilled_caecum_5) load(&quot;data/gene_expr_6.Rdata&quot;) distq_6 &lt;- distillq(gene_expr_6, mag_ann, GIFT_db2, genecol = 1, genomecol = 2, annotcol = c(9, 10, 19)) save(distilled_caecum_6, file = &quot;results/tables/distilled_caecum_6.Rdata&quot;) rm(gene_expr_6, distilled_caecum_6) load(&quot;data/gene_expr_7.Rdata&quot;) distq_7 &lt;- distillq(gene_expr_7, mag_ann, GIFT_db2, genecol = 1, genomecol = 2, annotcol = c(9, 10, 12)) save(distilled_caecum_7, file = &quot;results/tables/distilled_caecum_7.Rdata&quot;) rm(gene_expr_7, distilled_caecum_7) load(&quot;results/tables/gene_expr_8.Rdata&quot;) distq_8 &lt;- distillq(gene_expr_8, mag_ann, GIFT_db2, genecol = 1, genomecol = 2, annotcol = c(9, 10, 12)) save(distilled_caecum_8, file = &quot;results/tables/distilled_caecum_8.Rdata&quot;) rm(gene_expr_8, distilled_caecum_8) 3.1.3 Combine metatranscriptomic GIFT expression counts load(&quot;data/distilled_caecum_1.Rdata&quot;) load(&quot;data/distilled_caecum_2.RData&quot;) load(&quot;data/distilled_caecum_3.RData&quot;) load(&quot;data/distilled_caecum_4.RData&quot;) load(&quot;data/distilled_caecum_5.RData&quot;) load(&quot;data/distilled_caecum_6.RData&quot;) load(&quot;data/distilled_caecum_7.RData&quot;) load(&quot;data/distilled_caecum_8.RData&quot;) expr_counts_raw &lt;- c(distilled_expression_caecum_1, distilled_expression_caecum_2, distilled_expression_caecum_3, distilled_expression_caecum_4, distilled_expression_caecum_5, distilled_expression_caecum_6, distilled_expression_caecum_7, distilled_expression_caecum_8) rm(distilled_expression_caecum_1, distilled_expression_caecum_2, distilled_expression_caecum_3, distilled_expression_caecum_4, distilled_expression_caecum_5, distilled_expression_caecum_6, distilled_expression_caecum_7, distilled_expression_caecum_8) # Change MAG IDs for a standardised code ena_to_mag_id &lt;- read_tsv(&quot;data/ena_to_mag_id.tsv&quot;) mag_name &lt;- names(expr_counts_raw) names(expr_counts_raw) &lt;- ena_to_mag_id$mag_id[match(mag_name, ena_to_mag_id$mag_name)] # Correct animal codes expr_counts &lt;- lapply(expr_counts_raw, function(x) { rownames(x) &lt;- gsub(&quot;F1a&quot;, &quot;&quot;, rownames(x)) x }) 3.1.4 Metadata of chickens sequenced for MT animal_codes_mt &lt;- rownames(expr_counts$cmag_001) %&gt;% gsub(&quot;F1a&quot;, &quot;&quot;, .) chicken_metadata_mt &lt;- read_tsv(&quot;data/metadata.tsv&quot;) %&gt;% mutate(sampling_time = factor(sampling_time, levels = c(&#39;7&#39;, &#39;21&#39;, &#39;35&#39;))) %&gt;% filter(animal_code %in% animal_codes_mt) 3.2 Save working objects save(expr_counts, chicken_metadata_mt, file = &quot;data/data_mt.Rdata&quot;) rm(list = ls()) "],["catalogue-richness.html", "Chapter 4 Catalogue richness 4.1 Load MG data 4.2 Densities of overall relative abundances by phylum 4.3 Functional ordination 4.4 Compare MCI and genome length between taxonomic groups", " Chapter 4 Catalogue richness 4.1 Load MG data load(&quot;data/data_mg.Rdata&quot;) 4.2 Densities of overall relative abundances by phylum 4.2.1 Calculate densities sum_ind &lt;- total %&gt;% rownames_to_column(var = &#39;genome&#39;) %&gt;% left_join(genome_taxonomy %&gt;% select(genome, phylum), by = &#39;genome&#39;) %&gt;% mutate(phylum = factor(phylum, levels = unique(names(phylum_colors)))) %&gt;% pivot_longer(-c(genome, phylum), values_to = &#39;value&#39;, names_to = &#39;animal_code&#39;) %&gt;% group_by(phylum, animal_code) %&gt;% summarise(total_ind = sum(value), mean_ind = mean(value)) sum_phylum &lt;- sum_ind %&gt;% group_by(phylum) %&gt;% summarise(total_phylum = sum(total_ind), mean_phylum = mean(mean_ind)) 4.2.2 Filter rare phylums count_taxa &lt;- sum_ind %&gt;% filter(phylum %in% c(&#39;Bacillota_A&#39;, &#39;Bacillota&#39;, &#39;Bacteroidota&#39;, &#39;Cyanobacteriota&#39;, &#39;Pseudomonadota&#39;, &#39;Actinomycetota&#39;, &#39;Verrucomicrobiota&#39;, &#39;Campylobacterota&#39;)) 4.2.3 Plot curves The resulting plot corresponds to Figure 1a ggplot(count_taxa, aes(x = total_ind, colour = phylum, fill = phylum)) + geom_density(alpha = 0.5) + scale_fill_manual(values = phylum_colors) + scale_color_manual(values = phylum_colors) + scale_x_log10() + xlab(&quot;Relative abundance (log-transformed)&quot;) + ylab(&quot;Density&quot;) + theme_minimal() + theme( panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), panel.grid.major.y = element_blank(), axis.text.y = element_blank(), axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8), axis.text.x = element_text(size = 8), legend.position = &quot;bottom&quot;) 4.3 Functional ordination gift_pcoa &lt;- gifts_elements %&gt;% as.data.frame() %&gt;% vegdist(method=&quot;euclidean&quot;) %&gt;% pcoa() gift_pcoa_rel_eigen &lt;- gift_pcoa$values$Relative_eig[1:10] # Get genome positions gift_pcoa_vectors &lt;- gift_pcoa$vectors %&gt;% # extract vectors as.data.frame() %&gt;% select(Axis.1,Axis.2) # keep the first 2 axes gift_pcoa_eigenvalues &lt;- gift_pcoa$values$Eigenvalues[c(1,2)] gift_pcoa_gifts &lt;- cov(gifts_elements, scale(gift_pcoa_vectors)) %*% diag((gift_pcoa_eigenvalues/(nrow(gifts_elements)-1))^(-0.5)) %&gt;% as.data.frame() %&gt;% rename(Axis.1 = 1, Axis.2 = 2) %&gt;% rownames_to_column(var = &quot;label&quot;) %&gt;% mutate(func = substr(label,1,3)) %&gt;% group_by(func) %&gt;% summarise(Axis.1 = mean(Axis.1), Axis.2 = mean(Axis.2)) %&gt;% rename(label = func) %&gt;% filter(!label %in% c(&quot;S01&quot;,&quot;S02&quot;,&quot;S03&quot;)) The resulting plot corresponds to Figure 1b. scale &lt;- 20 # scale for vector loadings gift_pcoa_vectors %&gt;% rownames_to_column(var = &quot;genome&quot;) %&gt;% left_join(genome_stats, by = &quot;genome&quot;) %&gt;% left_join(genome_taxonomy, by = &quot;genome&quot;) %&gt;% ggplot() + # genome positions scale_color_manual(values = order_colors)+ geom_point(aes(x = Axis.1, y = Axis.2, color = order, size = mag_length), alpha = 0.9, shape = 16) + # scale_color_manual(values=phylum_colors) + scale_size_continuous(range = c(0.05, 4)) + # loading positions geom_segment(data = gift_pcoa_gifts, aes(x = 0, y = 0, xend = Axis.1 * scale, yend = Axis.2 * scale), arrow = arrow(length = unit(0.2, &quot;cm&quot;), type = &quot;open&quot;, angle = 25), linewidth = 0.2, color = &quot;black&quot;) + # primary and secondary scale adjustments scale_x_continuous(name = paste0(&quot;PCoA1 (&quot;,round(gift_pcoa_rel_eigen[1]*100, digits = 2), &quot; %)&quot;), sec.axis = sec_axis(~ . / scale, name = &quot;Loadings on PCoA1&quot;)) + scale_y_continuous(name = paste0(&quot;PCoA2 (&quot;,round(gift_pcoa_rel_eigen[2]*100, digits = 2), &quot; %)&quot;), sec.axis = sec_axis(~ . / scale, name = &quot;Loadings on PCoA2&quot;)) + geom_label_repel(data = gift_pcoa_gifts, aes(label = label, x = Axis.1 * scale, y = Axis.2 * scale), segment.color = &#39;transparent&#39;, size = 3) + theme_minimal() + theme(legend.position = &quot;bottom&quot;, axis.title.x = element_text(size = 12), axis.title.y = element_text(size = 12), axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 8)) 4.3.1 Plot genome length and average MCI gradients # Preparing data for ploting gradients overall_mci &lt;- gifts_elements %&gt;% as.data.frame() %&gt;% rownames_to_column(var = &quot;genome&quot;) %&gt;% rowwise() %&gt;% mutate(overall = mean(c_across(B0101:S0301))) %&gt;% select(genome, overall) gift_pcoa_vectors_with_metadata &lt;- gift_pcoa_vectors %&gt;% rownames_to_column(var = &quot;genome&quot;) %&gt;% left_join(overall_mci, by = &quot;genome&quot;) %&gt;% left_join(genome_stats %&gt;% select(genome, mag_length), by = &quot;genome&quot;) %&gt;% left_join(gifts_functions %&gt;% as.data.frame %&gt;% rownames_to_column(var = &quot;genome&quot;) %&gt;% select(genome, B04, B07)) scale_factor &lt;- max(gift_pcoa_vectors_with_metadata$mag_length, na.rm = TRUE) / max(gift_pcoa_vectors_with_metadata$overall, na.rm = TRUE) # Axis 1 gradients gift_pcoa_vectors_with_metadata %&gt;% ggplot(aes(x = Axis.1)) + geom_smooth(aes(y = mag_length), color = &quot;darkblue&quot;) + geom_smooth(aes(y = overall * scale_factor), color = &quot;darkgreen&quot;) + scale_y_continuous(name = &quot;MAG length&quot;, sec.axis = sec_axis(~ . / scale_factor, name = &quot;Overall MCI&quot;)) + theme_minimal() + theme( axis.title.y.left = element_text(color = &quot;darkblue&quot;), axis.title.y.right = element_text(color = &quot;darkgreen&quot;), axis.title.x = element_text(size = 12), axis.title.y = element_text(size = 12), axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 8), legend.position = &quot;none&quot;) 4.3.2 Plot SCFA and vitamin biosynthesis gradients # Axis 2 gradients scale_factor &lt;- max(gift_pcoa_vectors_with_metadata$B04, na.rm = TRUE) / max(gift_pcoa_vectors_with_metadata$B07, na.rm = TRUE) gift_pcoa_vectors_with_metadata %&gt;% ggplot(aes(x = Axis.2)) + geom_smooth(aes(y = B04), color = &quot;#ee3237&quot;) + geom_smooth(aes(y = B07 * scale_factor), color = &quot;#a61f5e&quot;) + scale_y_continuous(name = &quot;SCFA biosynthesis&quot;, sec.axis = sec_axis(~ . / scale_factor, name = &quot;Vitamin biosynthesis&quot;)) + theme_minimal() + theme( axis.title.y.left = element_text(color = &quot;#ee3237&quot;), axis.title.y.right = element_text(color = &quot;#a61f5e&quot;), axis.title.x = element_text(size = 12), axis.title.y = element_text(size = 12), axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), text = element_text(size = 8), legend.position = &quot;none&quot;) 4.4 Compare MCI and genome length between taxonomic groups The resulting plot corresponds to Supplementary Figure S1 main_phylums &lt;- c(&quot;Bacillota_A&quot;, &quot;Bacillota&quot;, &quot;Bacteroidota&quot;, &quot;Cyanobacteriota&quot;,&quot;Pseudomonadota&quot;, &quot;Actinomycetota&quot;, &quot;Verrucomicrobiota&quot;, &quot;Campylobacterota&quot; ) selected_taxonomy_colors &lt;- taxonomy_colors %&gt;% filter(phylum %in% main_phylums) selected_orders &lt;- selected_taxonomy_colors %&gt;% select(order, color_order) %&gt;% filter(order != &quot;Gastranaerophilales&quot;) %&gt;% filter(order != &quot;Actinomycetales&quot;) %&gt;% filter(order != &quot;Coriobacteriales&quot;) selected_groups &lt;- selected_taxonomy_colors %&gt;% select(phylum, color_phylum) %&gt;% distinct(phylum, color_phylum) %&gt;% filter(color_phylum != &#39;#c28c5c&#39;) %&gt;% rename(order = &#39;phylum&#39;) %&gt;% rename(color_order = &#39;color_phylum&#39;) %&gt;% bind_rows(., selected_orders) %&gt;% mutate(order = factor(order, levels = c(&quot;Campylobacterota&quot;, &quot;Verrucomicrobiota&quot;, &quot;Actinomycetota&quot;, &quot;Enterobacterales&quot;, &quot;RF32&quot;, &quot;Burkholderiales&quot;, &quot;Rs-D84&quot;, &quot;Pseudomonadota&quot;, &quot;Gastranaerophilales&quot;, &quot;Cyanobacteriota&quot;, &quot;Bacteroidales&quot;, &quot;Flavobacteriales&quot;, &quot;Bacteroidota&quot;, # &quot;RF39&quot;, &quot;Lactobacillales&quot;, &quot;ML615J-28&quot;, &quot;Erysipelotrichales&quot;, &quot;Acholeplasmatales&quot;, &quot;Bacillales&quot;, &quot;RFN20&quot;, &quot;Bacillota&quot;, &quot;Oscillospirales&quot;, &quot;TANB77&quot;, &quot;Christensenellales&quot;, &quot;Lachnospirales&quot;, &quot;Clostridiales&quot;, &quot;Monoglobales_A&quot;, &quot;Peptostreptococcales&quot;, &quot;Monoglobales&quot;, &quot;UBA1212&quot;, &quot;Bacillota_A&quot;))) %&gt;% arrange(order) genome_taxonomy &lt;- genome_taxonomy %&gt;% mutate(avg_mci = rowMeans(gifts_elements)) %&gt;% mutate(length = genome_stats$mag_length) table_one &lt;- genome_taxonomy %&gt;% select(genome, order, avg_mci) table_two &lt;- genome_taxonomy %&gt;% select(genome, phylum, avg_mci) %&gt;% rename(order = &#39;phylum&#39;) %&gt;% bind_rows(., table_one) %&gt;% rename(group = &#39;order&#39;) border_groups &lt;- c(&quot;Bacillota_A&quot;, &quot;Bacillota&quot;, &quot;Bacteroidota&quot;, &quot;Cyanobacteriota&quot;, &quot;Pseudomonadota&quot;, &quot;Actinomycetota&quot;, &quot;Verrucomicrobiota&quot;, &quot;Campylobacterota&quot;) 4.4.1 Average MCI by taxonomic phylum and order table_two %&gt;% filter(group %in% selected_groups$order) %&gt;% mutate(group = factor(group, levels = selected_groups$order)) %&gt;% ggplot() + geom_jitter(aes(x = group, y = avg_mci), color = &#39;grey&#39;, alpha = 0.5, width = 0.1) + geom_violin(aes(x = group, y = avg_mci, fill = group), color = NA, size = 0.01) + theme_minimal() + xlab(&quot;Taxonomic group&quot;) + ylab(&quot;Genome average metabolic capacity&quot;) + scale_fill_manual(values = selected_taxonomy_colors$color_order) + theme(legend.position = &#39;none&#39;, ) + coord_flip() 4.4.2 Genome length by taxonomic phylum and order table_three &lt;- genome_taxonomy %&gt;% select(genome, order, length) table_four &lt;- genome_taxonomy %&gt;% select(genome, phylum, length) %&gt;% rename(order = &#39;phylum&#39;) %&gt;% bind_rows(., table_three) %&gt;% rename(group = &#39;order&#39;) table_four %&gt;% filter(group %in% selected_groups$order) %&gt;% mutate(group = factor(group, levels = selected_groups$order)) %&gt;% ggplot() + geom_jitter(aes(x = group, y = length), color = &#39;grey&#39;, alpha = 0.5, width = 0.1) + geom_violin(aes(x = group, y = length, fill = group), color = NA, size = 0.01) + theme_minimal() + xlab(&quot;Taxonomic group&quot;) + ylab(&quot;Mag length&quot;) + scale_fill_manual(values = selected_taxonomy_colors$color_order) + theme(legend.position = &#39;none&#39;) + coord_flip() rm(list = ls()) "],["alpha-diversity.html", "Chapter 5 Alpha diversity 5.1 Load MG data 5.2 Hill numbers - Alpha diversity 5.3 Temporal development", " Chapter 5 Alpha diversity 5.1 Load MG data load(&quot;data/data_mg.Rdata&quot;) 5.2 Hill numbers - Alpha diversity # Neutral neutral &lt;- mag_weighted %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;animal_code&quot;) # Phylogenetic phylogenetic &lt;- mag_weighted %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;animal_code&quot;) # Functional KEGG dist_kegg &lt;- genome_kegg_paths %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% traits2dist(., method = &quot;gower&quot;) functional_kegg &lt;- mag_weighted %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1 , dis = dist_kegg) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional_kegg = 1) %&gt;% rownames_to_column(var = &quot;animal_code&quot;) %&gt;% mutate(functional_kegg = if_else(is.nan(functional_kegg), 1, functional_kegg)) # Sequence depth log_seq_depth &lt;- read_counts %&gt;% column_to_rownames(var = &#39;genome&#39;) %&gt;% {as.data.frame(log(colSums(.)))} %&gt;% rename(seq_depth = &#39;log(colSums(.))&#39;) %&gt;% rownames_to_column(var = &#39;animal_code&#39;) # Merge all metrics alpha_div &lt;- neutral %&gt;% full_join(phylogenetic, by = &#39;animal_code&#39;) %&gt;% full_join(functional_kegg, by = &#39;animal_code&#39;) %&gt;% left_join(chicken_metadata, by = &#39;animal_code&#39;) %&gt;% left_join(log_seq_depth, by = &#39;animal_code&#39;) save(alpha_div, file = &quot;data/alpha_div.Rdata&quot;) 5.2.1 Alpha diversity by sampling day The resulting plot corresponds to Figure 2a. load(&quot;data/alpha_div.Rdata&quot;) # Neutral p_n &lt;- ggplot(alpha_div, aes(x = sampling_time, y = neutral, group = sampling_time)) + geom_jitter(aes_string(color = &#39;sampling_time&#39;), size = 0.3, width = 0.25, alpha = 0.6) + geom_boxplot(aes_string(fill = &#39;sampling_time&#39;), width = 0.5, alpha = 0.5, outlier.color = NA) + scale_fill_manual(values = c(&#39;#E69F00&#39;, &#39;#CC6677&#39;, &#39;#56B4E9&#39;)) + scale_color_manual(values = c(&#39;#E69F00&#39;, &#39;#CC6677&#39;, &#39;#56B4E9&#39;)) + theme_minimal() + ylab(NULL) + xlab(NULL) + ggtitle(&quot;Neutral&quot;) + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8), plot.title = element_text(size = 10), legend.position = &quot;none&quot;) # Phylogenetic p_p &lt;- ggplot(alpha_div, aes(x = sampling_time, y = phylogenetic, group = sampling_time)) + geom_jitter(aes_string(colour = &#39;sampling_time&#39;), size = 0.3, width = 0.25, alpha = 0.6) + geom_boxplot(aes_string(fill = &#39;sampling_time&#39;), width = 0.5, alpha = 0.5, outlier.color = NA) + scale_fill_manual(values = c(&#39;#E69F00&#39;, &#39;#CC6677&#39;, &#39;#56B4E9&#39;)) + scale_color_manual(values = c(&#39;#E69F00&#39;, &#39;#CC6677&#39;, &#39;#56B4E9&#39;)) + theme_minimal() + labs(x = NULL, y = NULL) + ggtitle(&quot;Phylogenetic&quot;) + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8), plot.title = element_text(size = 10), legend.position = &#39;none&#39;) # Functional KEGGs p_f_kegg &lt;- ggplot(alpha_div, aes(x = sampling_time, y = functional_kegg, group = sampling_time)) + geom_jitter(aes_string(colour = &#39;sampling_time&#39;), size = 0.3, width = 0.25, alpha = 0.6) + geom_boxplot(aes_string(fill = &#39;sampling_time&#39;), width = 0.5, alpha = 0.5, outlier.color = NA) + scale_fill_manual(values = c(&quot;#E69F00&quot;, &quot;#CC6677&quot;, &quot;#56B4E9&quot;)) + scale_color_manual(values = c(&quot;#E69F00&quot;, &quot;#CC6677&quot;, &quot;#56B4E9&quot;)) + theme_minimal() + labs(x =NULL, y = NULL) + ggtitle(&quot;Functional&quot;) + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8), plot.title = element_text(size = 10), legend.position = &quot;none&quot;) grid.arrange(p_n, p_p, p_f_kegg, ncol = 3) 5.3 Temporal development The resulting tables correspond to Supplementary Table S2. 5.3.1 Neutral m_div_n &lt;- lme(neutral ~ seq_depth + sex + breed + treatment + trial * age, random = ~1|pen, data = alpha_div) anova(m_div_n) numDF denDF F-value p-value (Intercept) 1 337 2131.3662 &lt;.0001 seq_depth 1 337 4.1298 0.0429 sex 1 42 1.7688 0.1907 breed 1 42 0.2047 0.6533 treatment 2 42 1.4325 0.2501 trial 1 42 2.1839 0.1469 age 1 337 44.1644 &lt;.0001 trial:age 1 337 0.7599 0.3840 5.3.2 Phylogenetic m_div_p &lt;- lme(phylogenetic ~ seq_depth + sex + breed + treatment + trial * age, random = ~ 1|pen, data = alpha_div) anova(m_div_p) numDF denDF F-value p-value (Intercept) 1 337 22644.853 &lt;.0001 seq_depth 1 337 0.413 0.5210 sex 1 42 4.093 0.0495 breed 1 42 11.799 0.0013 treatment 2 42 1.168 0.3210 trial 1 42 3.901 0.0549 age 1 337 1185.345 &lt;.0001 trial:age 1 337 9.772 0.0019 5.3.3 Functional KEGG m_div_f_kegg &lt;- lme(functional_kegg ~ seq_depth + sex + breed + treatment + trial * age, random = ~ 1|pen, data = alpha_div) anova(m_div_f_kegg) numDF denDF F-value p-value (Intercept) 1 337 307927.81 &lt;.0001 seq_depth 1 337 0.20 0.6535 sex 1 42 0.79 0.3791 breed 1 42 3.00 0.0907 treatment 2 42 1.23 0.3016 trial 1 42 2.52 0.1203 age 1 337 406.41 &lt;.0001 trial:age 1 337 1.17 0.2799 rm(list = ls()) "],["bacterial-community-composition.html", "Chapter 6 Bacterial community composition 6.1 Load MG data 6.2 Hill numbers - beta diversity 6.3 Effect of design in microbiome composition 6.4 Community composition development", " Chapter 6 Bacterial community composition 6.1 Load MG data load(&quot;data/data_mg.Rdata&quot;) 6.2 Hill numbers - beta diversity # Neutral beta_q1n &lt;- mag_weighted %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% dplyr::select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, metric = &quot;S&quot;, out = &quot;pair&quot;) # Phylogenetic beta_q1p &lt;- mag_weighted %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% dplyr::select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree, metric = &quot;S&quot;, out = &quot;pair&quot;) # Functional KEGG dist_kegg &lt;- genome_kegg_paths %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% traits2dist(., method = &quot;gower&quot;) beta_q1f_kegg &lt;- mag_weighted %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% dplyr::select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, dist = dist_kegg, metric = &quot;S&quot;, out = &quot;pair&quot;) save(beta_q1n, beta_q1p, beta_q1f_gifts, file = &quot;data/beta_div.Rdata&quot;) 6.2.1 Compare individuals from same trial and pen between sampling days The resulting stats correspond to Supplementary Table S3. load(&quot;data/beta_div.Rdata&quot;) metadata_2 &lt;- chicken_metadata %&gt;% dplyr::rename(second = &#39;animal_code&#39;, sampling_time_2 = &#39;sampling_time&#39;, pen_2 = &#39;pen&#39;, trial_2 = &#39;trial&#39;) # Neutral betadiv_n_dis &lt;- beta_q1n %&gt;% rename(animal_code = &#39;first&#39;) %&gt;% left_join(chicken_metadata, by = &#39;animal_code&#39;) %&gt;% left_join(metadata_2, by = &#39;second&#39;) %&gt;% mutate(diff = case_when( sampling_time == &#39;7&#39; &amp; sampling_time_2 == &#39;21&#39; ~ &#39;7_21&#39;, sampling_time == &#39;21&#39; &amp; sampling_time_2 == &#39;35&#39; ~ &#39;21_35&#39;, sampling_time == &#39;7&#39; &amp; sampling_time_2 == &#39;35&#39; ~ &#39;7_35&#39;)) %&gt;% mutate(diff_trial = case_when(trial == &#39;CA&#39; &amp; trial_2 == &#39;CA&#39; ~ &#39;CA&#39;, trial == &#39;CB&#39; &amp; trial_2 == &#39;CB&#39; ~ &#39;CB&#39;)) %&gt;% mutate(diff_pen = case_when(pen == pen_2 ~ &#39;same&#39;)) %&gt;% drop_na(diff, diff_trial, diff_pen) # Phylogenetic betadiv_p_dis &lt;- beta_q1p %&gt;% rename(animal_code = &#39;first&#39;) %&gt;% left_join(chicken_metadata, by = &#39;animal_code&#39;) %&gt;% left_join(metadata_2, by = &#39;second&#39;) %&gt;% mutate(diff = case_when( sampling_time == &#39;7&#39; &amp; sampling_time_2 == &#39;21&#39; ~ &#39;7_21&#39;, sampling_time == &#39;21&#39; &amp; sampling_time_2 == &#39;35&#39; ~ &#39;21_35&#39;, sampling_time == &#39;7&#39; &amp; sampling_time_2 == &#39;35&#39; ~ &#39;7_35&#39;)) %&gt;% mutate(diff_trial = case_when(trial == &#39;CA&#39; &amp; trial_2 == &#39;CA&#39; ~ &#39;CA&#39;, trial == &#39;CB&#39; &amp; trial_2 == &#39;CB&#39; ~ &#39;CB&#39;)) %&gt;% mutate(diff_pen = case_when(pen == pen_2 ~ &#39;same&#39;)) %&gt;% drop_na(diff, diff_trial, diff_pen) # Functional KEGG betadiv_f_dis_kegg &lt;- beta_q1f_kegg %&gt;% rename(animal_code = &#39;first&#39;) %&gt;% left_join(chicken_metadata, by = &#39;animal_code&#39;) %&gt;% left_join(metadata_2, by = &#39;second&#39;) %&gt;% mutate(diff = case_when( sampling_time == &#39;7&#39; &amp; sampling_time_2 == &#39;21&#39; ~ &#39;7_21&#39;, sampling_time == &#39;21&#39; &amp; sampling_time_2 == &#39;35&#39; ~ &#39;21_35&#39;, sampling_time == &#39;7&#39; &amp; sampling_time_2 == &#39;35&#39; ~ &#39;7_35&#39;)) %&gt;% mutate(diff_trial = case_when(trial == &#39;CA&#39; &amp; trial_2 == &#39;CA&#39; ~ &#39;CA&#39;, trial == &#39;CB&#39; &amp; trial_2 == &#39;CB&#39; ~ &#39;CB&#39;)) %&gt;% mutate(diff_pen = case_when(pen == pen_2 ~ &#39;same&#39;)) %&gt;% drop_na(diff, diff_trial, diff_pen) betadiv_n_dis %&gt;% group_by(diff) %&gt;% summarise(mean = mean(S), sd = sd(S)) # A tibble: 3 x 3 diff mean sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 21_35 0.458 0.100 2 7_21 0.542 0.0907 3 7_35 0.597 0.0917 betadiv_p_dis %&gt;% group_by(diff) %&gt;% summarise(mean = mean(S), sd = sd(S)) # A tibble: 3 x 3 diff mean sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 21_35 0.168 0.0776 2 7_21 0.238 0.0883 3 7_35 0.297 0.103 betadiv_f_dis_kegg %&gt;% group_by(diff) %&gt;% summarise(mean = mean(S), sd = sd(S)) # A tibble: 3 x 3 diff mean sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 21_35 0.205 0.246 2 7_21 0.252 0.291 3 7_35 0.227 0.262 6.2.2 Plot difference between sampling points for beta diversity The resulting plot corresponds to Supplementary Figure S3. # Neutral p_n &lt;- betadiv_n_dis %&gt;% filter(!diff == &#39;7_35&#39;) %&gt;% mutate(diff = factor(diff, levels = c(&#39;7_21&#39;, &#39;21_35&#39;))) %&gt;% ggplot(aes(x = diff, y = S, fill = diff)) + geom_boxplot() + ylim(0,0.5) + theme_minimal() + theme(legend.position = &#39;none&#39;) + ggtitle(&#39;Neutral&#39;) # Phylogenetic p_p &lt;- betadiv_p_dis %&gt;% filter(!diff == &#39;7_35&#39;) %&gt;% mutate(diff = factor(diff, levels = c(&#39;7_21&#39;, &#39;21_35&#39;))) %&gt;% ggplot(aes(x = diff, y = S, fill = diff)) + geom_boxplot() + ylim(0,0.5) + theme_minimal() + theme(legend.position = &#39;none&#39;) + ggtitle(&#39;Phylogenetic&#39;) # Functional KEGG p_f_kegg &lt;- betadiv_f_dis_kegg %&gt;% filter(!diff == &#39;7_35&#39;) %&gt;% mutate(diff = factor(diff, levels = c(&#39;7_21&#39;, &#39;21_35&#39;))) %&gt;% ggplot(aes(x = diff, y = S, fill = diff)) + geom_boxplot() + ylim(0,0.5) + theme_minimal() + theme(legend.position = &#39;none&#39;) + ggtitle(&#39;Functional&#39;) grid.arrange(p_n, p_p, p_f_kegg, ncol = 3) 6.3 Effect of design in microbiome composition 6.3.1 Permanova values for different metrics of beta diversity The resulting stats correspond to Supplementary Table S3. # Dissimilarity tables perm &lt;- how(nperm = 999) setBlocks(perm) &lt;- with(chicken_metadata, pen) # Neutral b1n_dis_table &lt;- beta_q1n %&gt;% bind_rows(beta_q1n %&gt;% rename(first = second, second = first)) %&gt;% pivot_wider(names_from = second, values_from = S) %&gt;% column_to_rownames(&#39;first&#39;) %&gt;% mutate(across(everything(), ~replace(., is.na(.), 0))) %&gt;% as.dist() adonis2(b1n_dis_table ~ trial + sex + breed + treatment + trial + trial * age, permutations = perm, data = chicken_metadata, by = &quot;term&quot;) Permutation test for adonis under reduced model Terms added sequentially (first to last) Blocks: with(chicken_metadata, pen) Permutation: free Number of permutations: 999 adonis2(formula = b1n_dis_table ~ trial + sex + breed + treatment + trial + trial * age, data = chicken_metadata, permutations = perm, by = &quot;term&quot;) Df SumOfSqs R2 F Pr(&gt;F) trial 1 2.860 0.05468 26.0870 0.001 *** sex 1 0.492 0.00941 4.4878 0.001 *** breed 1 0.905 0.01731 8.2583 0.001 *** treatment 2 0.857 0.01638 3.9066 0.001 *** age 1 4.137 0.07909 37.7309 0.001 *** trial:age 1 1.393 0.02663 12.7057 0.001 *** Residual 380 41.665 0.79651 Total 387 52.310 1.00000 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # Phylogenetic b1p_dis_table &lt;- beta_q1p %&gt;% bind_rows(beta_q1n %&gt;% rename(first = second, second = first)) %&gt;% pivot_wider(names_from = second, values_from = S) %&gt;% column_to_rownames(&#39;first&#39;) %&gt;% mutate(across(everything(), ~replace(., is.na(.), 0))) %&gt;% as.dist() adonis2(b1p_dis_table ~ trial + sex + breed + treatment + trial + trial * age, permutations = perm, data = chicken_metadata, by = &quot;term&quot;) Permutation test for adonis under reduced model Terms added sequentially (first to last) Blocks: with(chicken_metadata, pen) Permutation: free Number of permutations: 999 adonis2(formula = b1p_dis_table ~ trial + sex + breed + treatment + trial + trial * age, data = chicken_metadata, permutations = perm, by = &quot;term&quot;) Df SumOfSqs R2 F Pr(&gt;F) trial 1 2.860 0.05468 26.0870 0.001 *** sex 1 0.492 0.00941 4.4878 0.001 *** breed 1 0.905 0.01731 8.2583 0.001 *** treatment 2 0.857 0.01638 3.9066 0.001 *** age 1 4.137 0.07909 37.7309 0.001 *** trial:age 1 1.393 0.02663 12.7057 0.001 *** Residual 380 41.665 0.79651 Total 387 52.310 1.00000 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # Functional KEGG b1f_dis_table_kegg &lt;- beta_q1f_kegg %&gt;% bind_rows(beta_q1n %&gt;% rename(first = second, second = first)) %&gt;% pivot_wider(names_from = second, values_from = S) %&gt;% column_to_rownames(&#39;first&#39;) %&gt;% mutate(across(everything(), ~replace(., is.na(.), 0))) %&gt;% as.dist() adonis2(b1f_dis_table_kegg ~ trial + sex + breed + treatment + trial + trial * age, permutations = perm, data = chicken_metadata, by = &quot;term&quot;) Permutation test for adonis under reduced model Terms added sequentially (first to last) Blocks: with(chicken_metadata, pen) Permutation: free Number of permutations: 999 adonis2(formula = b1f_dis_table_kegg ~ trial + sex + breed + treatment + trial + trial * age, data = chicken_metadata, permutations = perm, by = &quot;term&quot;) Df SumOfSqs R2 F Pr(&gt;F) trial 1 2.860 0.05468 26.0870 0.001 *** sex 1 0.492 0.00941 4.4878 0.001 *** breed 1 0.905 0.01731 8.2583 0.001 *** treatment 2 0.857 0.01638 3.9066 0.001 *** age 1 4.137 0.07909 37.7309 0.001 *** trial:age 1 1.393 0.02663 12.7057 0.001 *** Residual 380 41.665 0.79651 Total 387 52.310 1.00000 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 6.3.2 Community composition perm &lt;- how(nperm = 999) setBlocks(perm) &lt;- with(chicken_metadata, pen) t_hel &lt;- hel %&gt;% t() %&gt;% as.data.frame() adonis2(t_hel ~ trial * sampling_time + breed * sampling_time + sex * sampling_time + treatment * sampling_time, permutations = perm, data = chicken_metadata, by = &quot;term&quot;) Permutation test for adonis under reduced model Terms added sequentially (first to last) Blocks: with(chicken_metadata, pen) Permutation: free Number of permutations: 999 adonis2(formula = t_hel ~ trial * sampling_time + breed * sampling_time + sex * sampling_time + treatment * sampling_time, data = chicken_metadata, permutations = perm, by = &quot;term&quot;) Df SumOfSqs R2 F Pr(&gt;F) trial 1 0.7573 0.02939 16.6760 0.001 *** sampling_time 2 6.3129 0.24504 69.5085 0.001 *** breed 1 0.2590 0.01005 5.7035 0.001 *** sex 1 0.0971 0.00377 2.1387 0.001 *** treatment 2 0.1423 0.00552 1.5664 0.001 *** trial:sampling_time 2 0.8781 0.03408 9.6680 0.001 *** sampling_time:breed 2 0.1629 0.00632 1.7937 0.026 * sampling_time:sex 2 0.1321 0.00513 1.4548 0.086 . sampling_time:treatment 4 0.2188 0.00849 1.2047 0.174 Residual 370 16.8020 0.65219 Total 387 25.7625 1.00000 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(t_hel ~ trial * sampling_time + breed + sex + treatment, permutations = perm, data = chicken_metadata, by = &quot;term&quot;) Permutation test for adonis under reduced model Terms added sequentially (first to last) Blocks: with(chicken_metadata, pen) Permutation: free Number of permutations: 999 adonis2(formula = t_hel ~ trial * sampling_time + breed + sex + treatment, data = chicken_metadata, permutations = perm, by = &quot;term&quot;) Df SumOfSqs R2 F Pr(&gt;F) trial 1 0.7573 0.02939 16.5310 0.001 *** sampling_time 2 6.3129 0.24504 68.9041 0.001 *** breed 1 0.2590 0.01005 5.6539 0.001 *** sex 1 0.0971 0.00377 2.1201 0.001 *** treatment 2 0.1423 0.00552 1.5528 0.001 *** trial:sampling_time 2 0.8781 0.03408 9.5839 0.001 *** Residual 378 17.3159 0.67214 Total 387 25.7625 1.00000 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 6.4 Community composition development 6.4.1 Distance-based RDA The resulting plot corresponds to Figure 2b in the manuscript. set.seed(4) hel_bray &lt;- vegdist(t(hel), method = &#39;bray&#39;) hel_bray_sqrt &lt;- sqrt(hel_bray) pcoa &lt;- cmdscale(hel_bray_sqrt, k = ncol(hel) - 1, eig = TRUE) pcoa_scores &lt;- pcoa$points db_rda &lt;- rda(pcoa_scores ~ sampling_time, data = chicken_metadata) # Stats anova(db_rda, by = &#39;term&#39;) Permutation test for rda under reduced model Terms added sequentially (first to last) Permutation: free Number of permutations: 999 Model: rda(formula = pcoa_scores ~ sampling_time, data = chicken_metadata) Df Variance F Pr(&gt;F) sampling_time 2 0.022776 27.979 0.001 *** Residual 385 0.156701 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 RsquareAdj(db_rda) $r.squared [1] 0.1269005 $adj.r.squared [1] 0.1223649 db_rda_scores &lt;- data.frame( scores(db_rda, display = &#39;wa&#39;), pen = chicken_metadata$pen, time = chicken_metadata$sampling_time ) db_rda_scores %&gt;% ggplot(aes(x = RDA1, y = RDA2, colour = time)) + geom_point(size = 3) + scale_color_manual(values = c(&#39;#e6a024&#39;, &#39;#cc6777&#39;, &#39;#5bb4e5&#39;)) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 12), axis.title.y = element_text(size = 12), axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), axis.title = element_text(size = 8), panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank()) rm(list = ls()) "],["bacterial-temporal-trends.html", "Chapter 7 Bacterial temporal trends 7.1 Load MG data 7.2 Functional ordination - Temporal PCoA with PCA loadings 7.3 Compositional barplots", " Chapter 7 Bacterial temporal trends 7.1 Load MG data load(&quot;data/data_mg.Rdata&quot;) 7.2 Functional ordination - Temporal PCoA with PCA loadings The resulting plot corresponds to Figure 2c. gift_pcoa &lt;- gifts_elements %&gt;% as.data.frame() %&gt;% vegdist(method=&quot;euclidean&quot;) %&gt;% pcoa() gift_pcoa_rel_eigen &lt;- gift_pcoa$values$Relative_eig[1:10] # Get genome positions gift_pcoa_vectors &lt;- gift_pcoa$vectors %&gt;% #extract vectors as.data.frame() %&gt;% select(Axis.1,Axis.2) # keep the first 2 axes mag_weighted %&gt;% rownames_to_column(var = &quot;genome&quot;) %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% pivot_longer(-genome, names_to = &quot;animal_code&quot;, values_to = &quot;count&quot;) %&gt;% left_join(chicken_metadata, by = join_by(animal_code == animal_code)) %&gt;% filter(!is.na(sampling_time)) %&gt;% group_by(genome, trial, sampling_time) %&gt;% summarise(count = mean(count)) %&gt;% left_join(gift_pcoa_vectors %&gt;% rownames_to_column(var = &quot;genome&quot;), by = &quot;genome&quot;) %&gt;% left_join(genome_taxonomy %&gt;% select(genome, phylum, order), by = &quot;genome&quot;) %&gt;% ggplot() + theme_minimal() + #genome positions geom_point(aes(x = Axis.1, y = Axis.2, color = order, size = count), alpha = 0.8, shape = 16) + # colors scale_color_manual(values = order_colors) + # scale_color_manual(values=phylum_colors) + scale_size_continuous(range = c(1,10)) + # scale adjustments scale_x_continuous(name = paste0(&quot;PCoA1 (&quot;,round(gift_pcoa_rel_eigen[1]*100, digits = 2), &quot; %)&quot;)) + scale_y_continuous(name = paste0(&quot;PCoA2 (&quot;,round(gift_pcoa_rel_eigen[2]*100, digits = 2), &quot; %)&quot;)) + facet_grid(trial ~ sampling_time) + theme(legend.position = &quot;none&quot;, axis.line = element_line(color = &quot;grey30&quot;), panel.border = element_rect(color = &quot;grey80&quot;, fill = NA), axis.ticks = element_line(color = &quot;grey30&quot;), panel.grid = element_line(color = &quot;grey80&quot;), strip.background = element_rect(fill = &quot;grey80&quot;, color = NA)) 7.3 Compositional barplots 7.3.1 Compositional barplot at order level physeq_comp_rare_order &lt;- aggregate_rare( phylo_seq, level = &quot;order&quot;, detection = 0.01 / 100, prevalence = 50 / 100, include.lowest = TRUE ) phy_order_df &lt;- psmelt(physeq_comp_rare_order) %&gt;% select(OTU, Sample, trial_age, Abundance) %&gt;% rename(order = &#39;OTU&#39;) %&gt;% separate_wider_delim(trial_age, &quot;_&quot;, names = c(&quot;trial&quot;, &quot;sampling_time&quot;)) # separating by sampling time and trial phy_order_df %&gt;% mutate(order = factor(order, levels = c(&#39;Veillonellales&#39;, &#39;Acidaminococcales&#39;, &#39;Selenomonadales&#39;, &#39;UBA4068&#39;, &#39;UBA1212&#39;, &#39;Monoglobales&#39;, &#39;Peptostreptococcales&#39;, &#39;Monoglobales_A&#39;, &#39;Clostridiales&#39;, &#39;Lachnospirales&#39;, &#39;Christensenellales&#39;, &#39;TANB77&#39;, &#39;Oscillospirales&#39;, &#39;RFN20&#39;, &#39;Bacillales&#39;,&#39;Acholeplasmatales&#39;, &#39;Erysipelotrichales&#39;, &#39;ML615J-28&#39;, &#39;Lactobacillales&#39;,&#39;RF39&#39;,&#39;Deferribacterales&#39;, &#39;Actinomycetales&#39;, &#39;Coriobacteriales&#39;, &#39;Gastranaerophilales&#39;,&#39;Flavobacteriales&#39;, &#39;Bacteroidales&#39;, &#39;Rs-D84&#39;, &#39;Burkholderiales&#39;, &#39;RF32&#39;,&#39;Enterobacterales&#39;, &#39;Desulfovibrionales&#39;, &#39;Verrucomicrobiales&#39;, &#39;Opitutales&#39;,&#39;Victivallales&#39;, &#39;Methanomassiliicoccales&#39;, &#39;Synergistales&#39;, &#39;Campylobacterales&#39;,&#39;Saccharimonadales&#39;, &#39;Methanobacteriales&#39;, &#39;Methanomicrobiales&#39;))) %&gt;% mutate(sampling_time = str_replace(sampling_time, pattern = &quot;7&quot;, replacement = &quot;Day 7&quot;), sampling_time = str_replace(sampling_time, pattern = &quot;21&quot;, replacement = &quot;Day 21&quot;), sampling_time = str_replace(sampling_time, pattern = &quot;35&quot;, replacement = &quot;Day 35&quot;)) %&gt;% mutate(sampling_time = factor(sampling_time, levels = c(&quot;Day 7&quot;, &quot;Day 21&quot;, &quot;Day 35&quot;))) %&gt;% ggplot(aes(x = Abundance, y = Sample, fill = order, group = order)) + geom_bar(stat = &quot;identity&quot;, position = &quot;stack&quot;, width = 1, color =&quot;darkgrey&quot;, size = 0.005) + facet_nested(sampling_time * trial ~., scales = &quot;free_y&quot;) + scale_color_manual(&#39;Order&#39;, values = order_colors) + scale_fill_manual(&#39;Order&#39;, values = order_colors) + ylab(&#39;Relative abundance&#39;) + theme(axis.text.y = element_blank(), axis.title.y = element_blank(), axis.ticks.y = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.spacing.x = unit(0.1, &quot;cm&quot;), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.text = element_text(size = 8), legend.title = element_text(size = 10), strip.text = element_text(size = 8), legend.position = &quot;right&quot;) + guides(fill = guide_legend(ncol = 1)) rm(list = ls()) "],["temporal-hmsc-setup.html", "Chapter 8 Temporal HMSC setup 8.1 Load MG data 8.2 Prepate data for HMSC 8.3 Define formula 8.4 Fit model 8.5 Evaluate convergence", " Chapter 8 Temporal HMSC setup HMSC models are computationally intensive. It is advisable to run this script on a server. The code is made to be reproduced on any supercomputer. 8.1 Load MG data 8.1.1 Define directories # Create directories dir.create(&quot;temporal_hmsc&quot;) dir.create(&quot;temporal_hmsc/model_fit&quot;) dir.create(&quot;temporal_hmsc/models&quot;) dir.create(&quot;temporal_hmsc/panels&quot;) # Define paths localDir = &quot;.&quot; ModelDir = file.path(localDir, &quot;temporal_hmsc/models&quot;) PanelDir = file.path(localDir, &quot;temporal_hmsc/panels&quot;) 8.1.2 Generate input objects # Load data load(&quot;data/data_mg.Rdata&quot;) # Metadata summary design &lt;- chicken_metadata[, c(&#39;animal_code&#39;, &#39;trial&#39;, &#39;pen&#39;, &#39;age&#39;,&#39;breed&#39;, &#39;sex&#39;, &#39;treatment&#39;, &#39;chicken_body_weight&#39;)] %&gt;% column_to_rownames(&quot;animal_code&quot;) design$log_seq_depth &lt;- log(colSums(read_counts %&gt;% column_to_rownames(&quot;genome&quot;))) design$animal_code &lt;- rownames(design) for (i in 1:ncol(design)) { if (is.character(design[,i])) { design[,i] &lt;- factor(design[,i]) } } 8.2 Prepate data for HMSC 8.2.1 Define tables # Genome count table (quantitative community data) YData &lt;- log1p(mag_weighted %&gt;% t() %&gt;% as.data.frame()) # Fixed effects data (explanatory variables) XData &lt;- design mean(rownames(YData) == rownames(XData)) # Ydata and XData in the same order # Genome phylogeny PData &lt;- genome_tree YData &lt;- YData[,colnames(YData) %in% genome_tree$tip.label] # Filter missing MAGs in tree 8.3 Define formula # Define XFormula XFormula_Time &lt;- ~log_seq_depth + trial + sex + breed + treatment + age # Study Design StudyDesign &lt;- design[,c(2,9)] rL.Pen &lt;- HmscRandomLevel(units = levels(StudyDesign$pen)) 8.3.1 Define HMSC model m &lt;- Hmsc(Y = YData, XData = XData, XFormula = XFormula_Time, studyDesign = StudyDesign, ranLevels = list(&quot;pen&quot; = rL.Pen), phyloTree = genome_tree, distr = &quot;normal&quot;, YScale = TRUE) save(m, file = file.path(ModelDir,&quot;unfitted_model.Rdata&quot;)) 8.3.2 Define MCMC characteristics ## How often to sample the MCM samples_list = c(5, 250, 250) # The number of MCMC steps between each recording sample thin_list = c(1,1,10) nst = length(thin_list) # The number of MCMC chains ot use nChains = 4 # Load only the unfitted models load(file.path(ModelDir, &quot;unfitted_model.Rdata&quot;)) unf_model &lt;- m 8.4 Fit model set.seed(1) for (Lst in 1:length(samples_list)) { thin = thin_list[Lst] samples = samples_list[Lst] # Fit the model m = sampleMcmc(unf_model, samples = samples, thin = thin, adaptNf = rep(ceiling(0.4*samples*thin), unf_model$nr), transient = ceiling(0.5*samples*thin), nChains = nChains, nParallel = nChains) # Create file name filename = paste(&quot;temporal_model&quot;, &quot;_thin_&quot;, as.character(thin), &quot;_samples_&quot;, as.character(samples), &quot;_chains_&quot;, as.character(nChains), &quot;.Rdata&quot;, sep = &quot;&quot;) # Save file save(m, file = file.path(ModelDir, filename)) } 8.5 Evaluate convergence Figure not added to Supplementary. set.seed(1) for (i in 1) { ma = NULL na = NULL ma_rho = NULL na_rho = NULL for (Lst in 1:nst) { thin = thin_list[Lst] samples = samples_list[Lst] filename = paste(&quot;temporal_model&quot;,&quot;_thin_&quot;, as.character(thin), &quot;_samples_&quot;, as.character(samples), &quot;_chains_&quot;, as.character(nChains), &quot;.Rdata&quot;, sep = &quot;&quot;) load(file = file.path(ModelDir, filename)) mpost = convertToCodaObject(m, spNamesNumbers = c(T,F), covNamesNumbers = c(T,F)) ## Beta - Species niches - response of MAGs to the fixed effects psrf.beta = gelman.diag(mpost$Beta,multivariate = FALSE)$psrf ## Rho - Influence of phylogeny on species niches - phylogenetic signal psrf.rho = gelman.diag(mpost$Rho,multivariate = FALSE)$psrf ## Beta if (is.null(ma)) { ma = psrf.beta[,1] na = paste0(&quot;temporal_model_&quot;, as.character(thin), &quot;,&quot;, as.character(samples)) } else { ma = cbind(ma,psrf.beta[,1]) na = c(na,paste0(&quot;temporal_model_&quot;, as.character(thin), &quot;,&quot;, as.character(samples))) } ## Rho if (is.null(ma_rho)) { ma_rho = psrf.rho[,1] na_rho = paste0(&quot;temporal_model_&quot;, as.character(thin), &quot;,&quot;, as.character(samples)) } else { ma_rho = cbind(ma_rho,psrf.rho[,1]) na_rho = c(na_rho,paste0(&quot;temporal_model_&quot;, as.character(thin), &quot;,&quot;, as.character(samples))) } } # Create file name panel.name = paste(&quot;MCMC_convergence&quot;, &quot;temporal_model_&quot;, as.character(i), &quot;.pdf&quot;, sep = &quot;&quot;) # Plot pdf(file = file.path(PanelDir, panel.name)) ## Beta par(mfrow = c(2,1)) vioplot(ma, col = rainbow_hcl(1), names = na, ylim = c(0, max(ma)), main = &quot;psrf(beta)&quot;) vioplot(ma, col = rainbow_hcl(1), names = na, ylim = c(0.9,1.1), main = &quot;psrf(beta)&quot;) ## Rho par(mfrow = c(2,1)) vioplot(ma_rho, col = rainbow_hcl(1), names = na_rho, ylim = c(0, max(ma_rho)), main = &quot;psrf(rho)&quot;) vioplot(ma_rho, col = rainbow_hcl(1), names = na_rho, ylim = c(0.9,1.1), main = &quot;psrf(rho)&quot;) dev.off() } rm(list = ls()) "],["hmsc-analysis.html", "Chapter 9 HMSC analysis 9.1 Load model 9.2 Cross-validation 9.3 Functional structure 9.4 Bacterial temporal trends table 9.5 Correlate bacterial MCI and response to time 9.6 Variance partitioning 9.7 Phylogenetic correlogram", " Chapter 9 HMSC analysis 9.1 Load model # Directory localDir = &quot;.&quot; ModelDir = file.path(localDir, &quot;temporal_hmsc/models&quot;) MFDir = file.path(localDir, &quot;temporal_hmsc/model_fit&quot;) # Load model if(!file.exists(&quot;temporal_hmsc/models/temporal_model_thin_10_samples_250_chains_4.Rdata&quot;)){ download.file( url = &#39;https://sid.erda.dk/share_redirect/Bd8UfDO2D6/temporal_model_thin_10_samples_250_chains_4.Rdata&#39;, destfile = &#39;temporal_hmsc/models/temporal_model_thin_10_samples_250_chains_4.Rdata&#39;, method = &#39;curl&#39; ) } load(file = file.path(ModelDir, &#39;temporal_model_thin_10_samples_250_chains_4.Rdata&#39;)) 9.2 Cross-validation The cross-validation part is also computationally intense. Make sure you have the right capacity for it. # Create partitions set.seed(12) partition_1 &lt;- createPartition(hM = m, nfolds = 2) partition_2 &lt;- c(rep(1,sum(m$XData$trial == &quot;CA&quot;)), rep(2,sum(m$XData$trial == &quot;CB&quot;))) set.seed(1) predY.MF &lt;- computePredictedValues(m, expected = TRUE) MF &lt;- evaluateModelFit(hM = m, predY = predY.MF) filename &lt;- file.path(MFDir, paste(&quot;MF_chains_4_thin_10_samples_250.rds&quot;)) saveRDS(MF, file = filename) MF &lt;- readRDS(file = filename) mean(MF$R2) 9.2.1 Model fit using 2-fold CV: samples randomly assigned to folds set.seed(1) predY.CV_1 &lt;- computePredictedValues(m, expected = TRUE, partition = partition_1, nChains = 1, nParallel = 1) MF.CV_1 &lt;- evaluateModelFit(hM = m, predY = predY.CV_1) # create file name and save filename &lt;- file.path(MFDir, paste(&quot;MF_CV1_chains_4_thin_10_samples_250.rds&quot;)) saveRDS(MF.CV_1,file = filename) MF_CV_1 &lt;- readRDS(file = filename) mean(MF_CV_1$R2) 9.2.2 Model fit using 2-fold CV: each fold contains the samples from one trial set.seed(1) predY.CV_2 &lt;- computePredictedValues(m, expected = TRUE, partition = partition_2, nChains = 1, nParallel = 1) MF.CV_2 &lt;- evaluateModelFit(hM = m, predY = predY.CV_2) # create file name and save filename &lt;- file.path(MFDir, paste(&quot;MF_CV2_chains_4_thin_10_samples_250.rds&quot;)) saveRDS(MF.CV_2, file = filename) MF_CV_2 &lt;- readRDS(file = filename) mean(MF_CV_2$R2) 9.3 Functional structure beta_post &lt;- getPostEstimate(m, parName = &quot;Beta&quot;) plotBeta(m, beta_post, supportLevel = 0.95, plotTree = TRUE) Gradient_age &lt;- constructGradient(m, focalVariable = &quot;age&quot;, non.focalVariables = 1) predY_age &lt;- predict(m, Gradient = Gradient_age, expected = TRUE) # Example using cmag_376 plotGradient(m, Gradient_age, pred = predY_age, yshow = 0, measure = &quot;Y&quot;, index = 376, showData = TRUE) 9.4 Bacterial temporal trends table beta_post &lt;- getPostEstimate(m, parName = &quot;Beta&quot;) # Increasing MAGs increasers &lt;- colnames(beta_post$support)[beta_post$support[8,] &gt; 0.95] increasers_df &lt;- data.frame(mag_id = increasers, parameter = beta_post$mean[8,colnames(m$Y) %in% increasers]) increasers_df$hmsc_trend &lt;- &quot;increaser&quot; # Decreasing MAGs decreasers &lt;- colnames(beta_post$support)[beta_post$support[8,] &lt; 0.05] decreasers_df &lt;- data.frame(mag_id = decreasers, parameter = beta_post$mean[8,colnames(m$Y) %in% decreasers]) decreasers_df$hmsc_trend &lt;- &quot;decreaser&quot; trends &lt;- colnames(beta_post$support) %&gt;% as.data.frame() %&gt;% dplyr::rename(mag_id = &#39;.&#39;) %&gt;% left_join(rbind(increasers_df, decreasers_df), by = &#39;mag_id&#39;) %&gt;% rename(genome = &#39;mag_id&#39;) %&gt;% replace_na(list(hmsc_trend = &#39;stable&#39;)) %&gt;% write_tsv(&quot;data/hmsc_mag_trend.tsv&quot;) 9.5 Correlate bacterial MCI and response to time The resulting plot corresponds to Figure 2e. load(&quot;data/data_mg.Rdata&quot;) trends &lt;- read_tsv(&quot;data/hmsc_mag_trend.tsv&quot;) mci_df &lt;- gifts_elements %&gt;% as.data.frame() %&gt;% mutate(avg_mci = rowMeans(.)) %&gt;% select(avg_mci) %&gt;% rownames_to_column(var = &#39;genome&#39;) trends %&gt;% left_join(genome_taxonomy %&gt;% select(genome, order), by = &#39;genome&#39;) %&gt;% left_join(mci_df, by = &#39;genome&#39;) %&gt;% ggplot() + geom_point(aes(x = parameter, y = avg_mci, color = order), size = 1) + scale_color_manual(values = order_colors) + geom_smooth(aes(x = parameter, y = avg_mci), method = &#39;lm&#39;, linewidth = 0.3) + theme_minimal() + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8), legend.position = &#39;none&#39;) 9.6 Variance partitioning The resulting results correspond to Supplementary Table S4. VP &lt;- computeVariancePartitioning(m) plotVariancePartitioning(hM = m, VP = VP) 9.7 Phylogenetic correlogram The resulting plot corresponds to Figure 2d. 9.7.1 Calcultate phylogenetic distance pw_phylo_dist &lt;- cophenetic.phylo(genome_tree) xy &lt;- t(combn(colnames(pw_phylo_dist), 2)) pw_phylo_dist &lt;- data.frame(xy, dist = pw_phylo_dist[xy]) colnames(pw_phylo_dist) &lt;- c(&#39;genome.x&#39;, &#39;genome.y&#39;, &#39;distance&#39;) pw_phylo_dist_taxa &lt;- pw_phylo_dist %&gt;% inner_join(genome_taxonomy, by = c(&#39;genome.x&#39; = &#39;genome&#39;)) %&gt;% inner_join(genome_taxonomy, by = c(&#39;genome.y&#39; = &#39;genome&#39;)) # Create distance table tax_table &lt;- c() for (i in c(1:nrow(pw_phylo_dist_taxa))) { pair &lt;- pw_phylo_dist_taxa[i,] #Phylum level if (!is.na(pair$phylum.x != pair$phylum.y) &amp; pair$phylum.x != pair$phylum.y) { row &lt;- c(&#39;Phylum&#39;, pair$distance) } else { #Class level if (!is.na(pair$class.x != pair$class.y) &amp; pair$class.x != pair$class.y) { row &lt;- c(&#39;Class&#39;, pair$distance) } else { #Order level if (!is.na(pair$order.x != pair$order.y) &amp; pair$order.x != pair$order.y) { row &lt;- c(&#39;Order&#39;, pair$distance) } else { #Family level if (!is.na(pair$family.x != pair$family.y) &amp; pair$family.x != pair$family.y) { row &lt;- c(&#39;Family&#39;, pair$distance) } else { # Genus if (!is.na(pair$genus.x != pair$genus.y) &amp; pair$genus.x != pair$genus.y) { row &lt;- c(&#39;Genus&#39;, pair$distance) } } } } } tax_table &lt;- rbind(tax_table,row) } tax_table &lt;- tax_table %&gt;% data.frame() %&gt;% dplyr::rename(taxonomy = &#39;X1&#39;, distance = &#39;X2&#39;) %&gt;% mutate(distance = as.numeric(distance)) %&gt;% write_tsv(&quot;data/taxonomy_distance.tsv&quot;) tax_table &lt;- read_tsv(&quot;data/taxonomy_distance.tsv&quot;) tax_table %&gt;% ggplot(aes(x = distance, fill = taxonomy, color = taxonomy, alpha = 0.1 )) + geom_density(adjust = 5) + scale_fill_manual(values = c(&#39;#E69F00&#39;,&#39;#e28cff&#39;,&#39;#999999&#39;,&#39;#56B4E9&#39;,&#39;#99cc00&#39;)) + scale_color_manual(values = c(&#39;#E69F00&#39;,&#39;#e28cff&#39;,&#39;#999999&#39;,&#39;#56B4E9&#39;,&#39;#99cc00&#39;)) + theme_void() 9.7.2 Phylogenetic signal mpost &lt;- convertToCodaObject(m) quantile(unlist(mpost$Rho), probs = c(.05,.5,.95)) age_parameter &lt;- beta_post$mean[8,] age_parameter_phyloSorted &lt;- data.frame(age_parameter = age_parameter[ match(m$phyloTree$tip.label, names(age_parameter)) ]) mean(rownames(age_parameter_phyloSorted) == m$phyloTree$tip.label) new_tree &lt;- m$phyloTree new_tree$node.label &lt;- NULL obj &lt;- phylo4d(new_tree, tip.data = age_parameter_phyloSorted) barplot.phylo4d(obj) age.cg &lt;- phyloCorrelogram(obj, trait = &quot;age_parameter&quot;) saveRDS(age.cg,file = &quot;age.cg.rds&quot;) age.cg &lt;- readRDS(file = &quot;age.cg.rds&quot;) plot(age.cg) rm(list = ls()) "],["bacterial-community-composition-1.html", "Chapter 10 Bacterial community composition 10.1 Load MG data 10.2 GIFTs per MAG 10.3 GIFTs per community", " Chapter 10 Bacterial community composition 10.1 Load MG data load(&quot;data/data_mg.Rdata&quot;) 10.2 GIFTs per MAG 10.2.1 Plot GIFTs of all bacteria by element This plot is not included in Supplementary gifts_elements %&gt;% as.data.frame() %&gt;% rownames_to_column(var = &#39;genome&#39;) %&gt;% pivot_longer(!genome, names_to = &#39;Code_element&#39;, values_to = &#39;mci&#39;) %&gt;% inner_join(GIFT_db2, by = &#39;Code_element&#39;) %&gt;% ggplot(aes(x = genome, y = Code_element, fill = mci)) + geom_tile(color = &#39;#ffffff&#39;) + scale_y_discrete(guide = guide_axis(check.overlap = TRUE)) + scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) + facet_grid(Code_function ~ ., scales = &#39;free&#39;, space = &#39;free&#39;) + scale_fill_gradientn(colours = rev(terrain.colors(10))) + theme_void(base_size = 18) + theme(axis.text.y = element_text(), legend.position = &#39;top&#39;) 10.3 GIFTs per community 10.3.1 Calculate community GIFTs elements_com &lt;- to.community(gifts_elements, sweep(hel, 2, colSums(hel), FUN = &quot;/&quot;), GIFT_db2) funcs_com &lt;- to.community(gifts_functions, sweep(hel, 2, colSums(hel), FUN = &quot;/&quot;), GIFT_db2) domains_com &lt;- to.community(gifts_domains, sweep(hel, 2, colSums(hel), FUN = &quot;/&quot;), GIFT_db2) save(elements_com, funcs_com, domains_com, file = &quot;data/mci_com.Rdata&quot;) 10.3.2 Plot community MCI The resulting plot corresponds to Figure 2f in the manuscript. load(&quot;data/mci_com.Rdata&quot;) funcs_com %&gt;% as.data.frame() %&gt;% rownames_to_column(&#39;animal_code&#39;) %&gt;% rowwise() %&gt;% mutate(overall = mean(c_across(B01:D09))) %&gt;% select(animal_code, overall) %&gt;% left_join(chicken_metadata %&gt;% select(animal_code, sampling_time), by = &#39;animal_code&#39;) %&gt;% ggplot(aes(x = sampling_time, y = overall, group = sampling_time)) + geom_jitter(aes_string(colour = &#39;sampling_time&#39;), size = 0.3, width = 0.2, alpha = 0.6) + geom_boxplot(aes_string(fill = &#39;sampling_time&#39;), width = 0.4, alpha = 0.5, outlier.color = NA) + scale_fill_manual(values = c(&#39;#E69F00&#39;, &#39;#CC6677&#39;, &#39;#56B4E9&#39;)) + scale_color_manual(values = c(&#39;#E69F00&#39;, &#39;#CC6677&#39;, &#39;#56B4E9&#39;)) + theme_minimal() + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), axis.title.x = element_text(size = 8), axis.title.y = element_text(size = 8), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 8), plot.title = element_text(size = 10), legend.position = &#39;none&#39;) rm(list = ls()) "],["associate-microbial-community-metrics-with-chicken-body-weight.html", "Chapter 11 Associate microbial community metrics with chicken body weight 11.1 Load MG and MT data 11.2 Associate alpha diversity metrics with chicken BW 11.3 Phylogenetic 11.4 Functional KEGG 11.5 Linear regressions 11.6 Associate community MCI with diversity 11.7 Associate community MCI with chicken BW 11.8 Associate community weighted genome size with chicken BW", " Chapter 11 Associate microbial community metrics with chicken body weight 11.1 Load MG and MT data load(&quot;data/data_mg.Rdata&quot;) load(&quot;data/alpha_div.Rdata&quot;) load(&quot;data/mci_com.Rdata&quot;) 11.2 Associate alpha diversity metrics with chicken BW The resulting plots are not included in Supplementary. 11.2.1 Neutral ggplot(alpha_div, aes(x = neutral, y = chicken_body_weight)) + geom_point() + geom_smooth(method = &quot;lm&quot;) + facet_wrap(~ sampling_time*trial, scales = &#39;free&#39;) 11.3 Phylogenetic ggplot(alpha_div, aes(x = phylogenetic, y = chicken_body_weight)) + geom_point() + geom_smooth(method = &quot;lm&quot;) + facet_wrap(~ sampling_time * trial, scales = &#39;free&#39;) 11.4 Functional KEGG ggplot(alpha_div, aes(x = functional_kegg, y = chicken_body_weight)) + geom_point() + geom_smooth(method = &quot;lm&quot;) + facet_wrap(~ sampling_time * trial, scales = &#39;free&#39;) 11.5 Linear regressions 11.5.1 Neutral The resulting plot corresponds to Figure 3a. div_all_day_35 &lt;- alpha_div %&gt;% filter(sampling_time == &#39;35&#39;) %&gt;% filter(trial != &#39;CC&#39;) #%&gt;% # filter(!animal_code %in% c(&quot;CB12.17&quot;, &quot;CA04.16&quot;, &quot;CA03.17&quot;)) # ¿? double check if we are OK filtering some samples, they show out of place diversity N &lt;- lme(chicken_body_weight ~ age + trial + neutral, random = ~1|pen, data = div_all_day_35) summary(N) Linear mixed-effects model fit by REML Data: div_all_day_35 AIC BIC logLik 1971.21 1988.686 -979.6049 Random effects: Formula: ~1 | pen (Intercept) Residual StdDev: 146.892 267.3176 Fixed effects: chicken_body_weight ~ age + trial + neutral Value Std.Error DF t-value p-value (Intercept) -2377.5282 1033.8704 90 -2.299638 0.0238 age 136.6093 28.5987 90 4.776764 0.0000 trialCB -37.8228 63.4256 46 -0.596333 0.5539 neutral -2.8996 0.8471 90 -3.423055 0.0009 Correlation: (Intr) age trilCB age -0.995 trialCB 0.047 -0.091 neutral -0.108 0.020 0.151 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.9136097 -0.7156661 -0.0462182 0.5659185 2.7314491 Number of Observations: 140 Number of Groups: 48 plot_model(N, type = &#39;eff&#39;, title = &#39;Neutral diversity&#39;, terms = &#39;neutral&#39;, show.data = TRUE) 11.5.2 Phylogenetic P &lt;- lme(chicken_body_weight ~ age + trial + phylogenetic, random = ~1|pen, data = div_all_day_35) summary(P) Linear mixed-effects model fit by REML Data: div_all_day_35 AIC BIC logLik 1971.488 1988.964 -979.7442 Random effects: Formula: ~1 | pen (Intercept) Residual StdDev: 133.6237 280.5324 Fixed effects: chicken_body_weight ~ age + trial + phylogenetic Value Std.Error DF t-value p-value (Intercept) -2405.5851 1082.1821 90 -2.222902 0.0287 age 142.6677 29.9857 90 4.757858 0.0000 trialCB 10.8886 62.3303 46 0.174691 0.8621 phylogenetic -64.2194 33.3309 90 -1.926725 0.0572 Correlation: (Intr) age trilCB age -0.970 trialCB 0.086 -0.086 phylogenetic -0.137 -0.104 -0.123 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.8560595 -0.6281856 -0.0497021 0.6532160 2.7098731 Number of Observations: 140 Number of Groups: 48 plot_p &lt;- plot_model(P, type = &#39;eff&#39;, title = &#39;Phylogenetic diversity&#39;, terms = &#39;phylogenetic&#39;, show.data = TRUE) 11.5.3 Functional KEGG Q_kegg &lt;- lme(chicken_body_weight ~ age + trial + functional_kegg, random = ~1|pen, data = div_all_day_35) summary(Q_kegg) Linear mixed-effects model fit by REML Data: div_all_day_35 AIC BIC logLik 1968.771 1986.247 -978.3854 Random effects: Formula: ~1 | pen (Intercept) Residual StdDev: 142.4688 281.7832 Fixed effects: chicken_body_weight ~ age + trial + functional_kegg Value Std.Error DF t-value p-value (Intercept) -3102.4077 1382.9000 90 -2.243407 0.0273 age 135.6025 30.3166 90 4.472873 0.0000 trialCB -4.7767 63.6887 46 -0.075001 0.9405 functional_kegg 322.1611 726.2162 90 0.443616 0.6584 Correlation: (Intr) age trilCB age -0.687 trialCB 0.063 -0.095 functional_kegg -0.625 -0.137 -0.016 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.00634774 -0.63344629 -0.09338556 0.53395793 2.56270649 Number of Observations: 140 Number of Groups: 48 plot_q &lt;- plot_model(Q_kegg, type = &#39;eff&#39;, title = &#39;Functional diversity&#39;, terms = &#39;functional_kegg&#39;, show.data = TRUE) 11.6 Associate community MCI with diversity domains_com_2 &lt;- funcs_com %&gt;% as.data.frame(optional = TRUE) %&gt;% rownames_to_column(var = &quot;animal_code&quot;) %&gt;% rowwise() %&gt;% mutate(overall_com_mci = mean(c_across(B01:D09))) %&gt;% select(animal_code, overall_com_mci) %&gt;% left_join(alpha_div) %&gt;% filter(sampling_time == &#39;35&#39;) # Neutral N &lt;- lme(neutral ~ age + trial + overall_com_mci, random = ~1|pen, data = domains_com_2) summary(N) Linear mixed-effects model fit by REML Data: domains_com_2 AIC BIC logLik 1320.058 1337.534 -654.0289 Random effects: Formula: ~1 | pen (Intercept) Residual StdDev: 14.1856 25.89659 Fixed effects: neutral ~ age + trial + overall_com_mci Value Std.Error DF t-value p-value (Intercept) 381.3418 121.82183 90 3.130324 0.0024 age -0.5173 2.76996 90 -0.186768 0.8523 trialCB -9.2723 6.09225 46 -1.521988 0.1349 overall_com_mci -906.4972 254.91596 90 -3.556063 0.0006 Correlation: (Intr) age trilCB age -0.807 trialCB 0.107 -0.093 overall_com_mci -0.576 -0.017 -0.095 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.3225513 -0.7220818 0.0119940 0.6066901 2.4257749 Number of Observations: 140 Number of Groups: 48 # Phylogenetic P &lt;- lme(phylogenetic ~ age + trial + overall_com_mci, random = ~1|pen, data = domains_com_2) summary(P) Linear mixed-effects model fit by REML Data: domains_com_2 AIC BIC logLik 262.8678 280.3437 -125.4339 Random effects: Formula: ~1 | pen (Intercept) Residual StdDev: 0.0001588075 0.5894999 Fixed effects: phylogenetic ~ age + trial + overall_com_mci Value Std.Error DF t-value p-value (Intercept) 19.24326 2.656478 90 7.243901 0.0000 age 0.09722 0.060649 90 1.602937 0.1125 trialCB 0.34837 0.101108 46 3.445529 0.0012 overall_com_mci -52.93094 5.272811 90 -10.038468 0.0000 Correlation: (Intr) age trilCB age -0.828 trialCB 0.148 -0.121 overall_com_mci -0.572 0.015 -0.120 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.54298266 -0.48022804 0.01396494 0.68418701 2.03727482 Number of Observations: 140 Number of Groups: 48 # Functional Q &lt;- lme(functional_kegg ~ age + trial + overall_com_mci, random = ~1|pen, data = domains_com_2) summary(Q) Linear mixed-effects model fit by REML Data: domains_com_2 AIC BIC logLik -518.8687 -501.3928 265.4344 Random effects: Formula: ~1 | pen (Intercept) Residual StdDev: 0.004408918 0.03300953 Fixed effects: functional_kegg ~ age + trial + overall_com_mci Value Std.Error DF t-value p-value (Intercept) 1.5837707 0.14937823 90 10.602420 0.0000 age 0.0058861 0.00340933 90 1.726471 0.0877 trialCB 0.0043668 0.00581201 46 0.751348 0.4563 overall_com_mci -1.4165522 0.29806837 90 -4.752441 0.0000 Correlation: (Intr) age trilCB age -0.826 trialCB 0.144 -0.119 overall_com_mci -0.572 0.011 -0.117 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.3045841 -0.5938668 -0.1627596 0.4672308 3.9317166 Number of Observations: 140 Number of Groups: 48 11.7 Associate community MCI with chicken BW mci &lt;- lme(chicken_body_weight ~ age + trial + overall_com_mci, random = ~1|pen, data = domains_com_2) summary(mci) Linear mixed-effects model fit by REML Data: domains_com_2 AIC BIC logLik 1965.926 1983.401 -976.9628 Random effects: Formula: ~1 | pen (Intercept) Residual StdDev: 149.5935 279.2234 Fixed effects: chicken_body_weight ~ age + trial + overall_com_mci Value Std.Error DF t-value p-value (Intercept) -2265.3072 1312.0446 90 -1.726547 0.0877 age 138.5372 29.8369 90 4.643157 0.0000 trialCB -0.8276 65.0269 46 -0.012727 0.9899 overall_com_mci -1747.0996 2741.7924 90 -0.637211 0.5256 Correlation: (Intr) age trilCB age -0.807 trialCB 0.108 -0.094 overall_com_mci -0.576 -0.016 -0.095 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.9808054 -0.6163449 -0.1085188 0.5455396 2.5326459 Number of Observations: 140 Number of Groups: 48 11.8 Associate community weighted genome size with chicken BW metadata_day_35 &lt;- chicken_metadata %&gt;% filter(sampling_time == &quot;35&quot;) mag_lengthed &lt;- round(sweep(total, MARGIN = 1, genome_stats$mag_length, `*`), 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rownames_to_column(var = &quot;animal_code&quot;) %&gt;% rowwise() %&gt;% mutate(comm_length = mean(c_across(2:389))) %&gt;% select(animal_code, comm_length) %&gt;% filter(animal_code %in% metadata_day_35$animal_code) %&gt;% left_join(metadata_day_35, by = &#39;animal_code&#39;) L &lt;- lme(chicken_body_weight ~ scale(age) + trial + scale(log(comm_length)), random = ~ 1|pen, data = mag_lengthed) summary(L) Linear mixed-effects model fit by REML Data: mag_lengthed AIC BIC logLik 1975.692 1993.168 -981.8459 Random effects: Formula: ~1 | pen (Intercept) Residual StdDev: 144.7197 281.2538 Fixed effects: chicken_body_weight ~ scale(age) + trial + scale(log(comm_length)) Value Std.Error DF t-value p-value (Intercept) 2231.4630 46.49952 90 47.98894 0.0000 scale(age) 114.0616 24.97663 90 4.56673 0.0000 trialCB -1.2398 66.94795 46 -0.01852 0.9853 scale(log(comm_length)) -4.9378 29.89947 90 -0.16515 0.8692 Correlation: (Intr) scl(g) trilCB scale(age) 0.088 trialCB -0.728 -0.113 scale(log(comm_length)) 0.211 0.070 -0.291 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.0015452 -0.6185148 -0.1001931 0.5667678 2.5817652 Number of Observations: 140 Number of Groups: 48 plot(L) rm(list = ls()) "],["bacteria-vs-chicken-bw-hmsc-setup.html", "Chapter 12 Bacteria vs Chicken BW HMSC setup 12.1 Load MG and MT data 12.2 Prepate data for HMSC 12.3 Fit model", " Chapter 12 Bacteria vs Chicken BW HMSC setup HMSC models are computationally intensive. It is advisable to run this script on a server. The code is made to be reproduced on any supercomputer. 12.1 Load MG and MT data 12.1.1 Define directories # Create directories dir.create(&quot;hmsc_bw&quot;) dir.create(&quot;hmsc_bw/model_fit&quot;) dir.create(&quot;hmsc_bw/models&quot;) dir.create(&quot;hmsc_bw/panels&quot;) # Define paths localDir = &quot;.&quot; ModelDir = file.path(localDir, &quot;hmsc_bw/models&quot;) 12.1.2 Generate input objects # Load data load(&quot;data/data_mg.Rdata&quot;) # Metadata summary design &lt;- chicken_metadata[, c(&#39;animal_code&#39;, &#39;trial&#39;, &#39;pen&#39;, &#39;age&#39;,&#39;breed&#39;, &#39;sex&#39;, &#39;treatment&#39;, &#39;chicken_body_weight&#39;)] %&gt;% column_to_rownames(&quot;animal_code&quot;) design$log_seq_depth &lt;- log(colSums(read_counts %&gt;% column_to_rownames(&quot;genome&quot;))) design$animal_code &lt;- rownames(design) for (i in 1:ncol(design)) { if (is.character(design[,i])) { design[,i] &lt;- factor(design[,i]) } } mean(rownames(design) == rownames(mag_weighted)) # Filter day 35 design_day35 &lt;- design %&gt;% filter(age &gt; 25) mag_weighted_day35 &lt;- mag_weighted %&gt;% rownames_to_column(var = &#39;genome&#39;) %&gt;% filter(genome %in% rownames(design_day35)) %&gt;% column_to_rownames(var = &#39;genome&#39;) %&gt;% t() %&gt;% as.data.frame() dim(mag_weighted_day35) dim(design_day35) mean(rownames(design_day35) == rownames(mag_weighted_day35)) 12.2 Prepate data for HMSC 12.2.1 Define tables # Genome count table (quantitative community data) YData &lt;- log1p(mag_weighted_day35) # Fixed effects data (explanatory variables) XData &lt;- design_day35 mean(rownames(YData) == rownames(XData)) # Ydata and XData in the same order # Genome phylogeny PData &lt;- genome_tree YData &lt;- YData[,colnames(YData) %in% genome_tree$tip.label] # Filter missing MAGs in tree # Traits gifts_functions &lt;- gifts_elements %&gt;% as.data.frame() %&gt;% rownames_to_column(var = &#39;genome&#39;) %&gt;% filter(genome %in% colnames(YData)) %&gt;% column_to_rownames(var = &#39;genome&#39;) mean(gifts_functions$mag_id == colnames(YData)) TrData &lt;- data.frame(MCI = TrData) rownames(TrData) &lt;- colnames(YData) 12.2.2 Define formulas # Define TrFormula TrFormula &lt;- ~MCI # Define XFormula XFormula &lt;- ~trial + age + chicken_body_weight + log_seq_depth # Study Design StudyDesign &lt;- design[,c(2,9)] rL.Pen &lt;- HmscRandomLevel(units = levels(StudyDesign$pen)) 12.2.3 Define HMSC model m &lt;- Hmsc(Y = YData, XData = XData, XFormula = XFormula, studyDesign = StudyDesign, ranLevels = list(&quot;pen&quot; = rL.Pen), phyloTree = tree, TrData = TrData, TrFormula = TrFormula, distr = &quot;normal&quot;, YScale = TRUE) save(m, file = file.path(ModelDir,&quot;unfitted_model.Rdata&quot;)) rm(list = ls()) 12.2.4 Define MCMC # Chain characteristics ## How often to sample the MCM samples_list = c(5, 250, 250) # The number of MCMC steps between each recording sample thin_list = c(1,1,10) # The number of MCMC chains ot use nChains = 4 # Load only the unfitted models load(file.path(ModelDir,&quot;unfitted_model.Rdata&quot;)) unf_model &lt;- m 12.3 Fit model set.seed(1) for (Lst in 1:length(samples_list)) { thin = thin_list[Lst] samples = samples_list[Lst] # fit the model m = sampleMcmc(unf_model, samples = samples, thin = thin, adaptNf = rep(ceiling(0.4*samples*thin), unf_model$nr), transient = ceiling(0.5*samples*thin), nChains = nChains, nParallel = nChains) # create file name filename = paste(&quot;bw_model&quot;, &quot;_thin_&quot;, as.character(thin), &quot;_samples_&quot;, as.character(samples), &quot;_chains_&quot;, as.character(nChains), &quot;.Rdata&quot;, sep = &quot;&quot;) # save file save(model, file = file.path(ModelDir,filename)) } rm(list = ls()) "],["bacteria-vs-chicken-bw-hmsc-analysis.html", "Chapter 13 Bacteria vs Chicken BW HMSC analysis 13.1 Load model 13.2 Evaluate model 13.3 Examine species responses 13.4 Examine variance partition 13.5 Create a data table 13.6 Create table with HMSC results", " Chapter 13 Bacteria vs Chicken BW HMSC analysis 13.1 Load model 13.1.1 Define directories # Directory localDir = &quot;.&quot; ModelDir = file.path(localDir, &quot;hmsc_bw/models&quot;) PanelDir = file.path(localDir, &quot;hmsc_bw/panels&quot;) MFDir &lt;- file.path(localDir, &quot;hmsc_bw/model_fit&quot;) 13.1.2 Load model if(!file.exists(&quot;hmsc_bw/models/bw_model_thin_10_samples_250_chains_4.Rdata&quot;)){ download.file( url = &#39;https://sid.erda.dk/share_redirect/Bd8UfDO2D6/bw_model_thin_10_samples_250_chains_4.Rdata&#39;, destfile = &#39;hmsc_bw/models/bw_model_thin_10_samples_250_chains_4.Rdata&#39;, method = &#39;curl&#39;) } load(file = file.path(ModelDir,&quot;bw_model_thin_10_samples_250_chains_4.Rdata&quot;)) 13.2 Evaluate model partition &lt;- createPartition(m, nfolds = 4) preds &lt;- computePredictedValues(m, partition = partition, nChains = 1) # nParallel = nChains MFCV &lt;- evaluateModelFit(hM = m, predY = preds) save(MFCV,file = file.path(MFDir, &quot;hmsc_bw/model_fit/MF_thin_10_samples_250_chains_4.Rdata&quot;)) 13.3 Examine species responses Plot not included in Supplementary beta_post &lt;- getPostEstimate(m, parName = &quot;Beta&quot;) plotBeta(m, beta_post,supportLevel = 0.9, plotTree = TRUE) 13.4 Examine variance partition Plot not included in Supplementary varpartition &lt;- computeVariancePartitioning(m) plotVariancePartitioning(m, VP = varpartition) bw_var &lt;- varpartition$vals[3,] bw_param &lt;- beta_post$mean[4,] bw_support &lt;- beta_post$support[4,] 13.5 Create a data table load(&quot;hmsc_bw/model_fit/MF_thin_10_samples_250_chains_4.Rdata&quot;) rel_abu &lt;- colMeans(vegan::decostand(exp(m$Y), method = &quot;total&quot;)) * 100 toplot &lt;- data.frame(parameter = bw_param, bw_support = bw_support, var = bw_var, pred = MFCV$R2, var_pred = bw_var * MFCV$R2) toplot$MAG &lt;- rownames(toplot) toplot$rel_abu &lt;- rel_abu rownames(toplot) &lt;- NULL write.table(toplot, file = &quot;data/data.txt&quot;, row.names = F) 13.5.1 Associate bacteria response with chicken BW not included in Supplementary toplot &lt;- read.table(&quot;data/data.txt&quot;, , row.names = F) ggplot() + geom_point(data = toplot, aes(x = parameter, y = Pred), alpha = 0.7, shape = 16) + geom_point(data = toplot[toplot$bw_support &gt; 0.975,], mapping = aes(x = parameter, y = Pred), color = &quot;red&quot;, shape = 16) + geom_point(data = toplot[toplot$bw_support &lt; 0.025,], mapping = aes(x = parameter, y = Pred), color = &quot;blue&quot;, shape = 16) + geom_vline(xintercept = 0) + geom_hline(yintercept = mean(toplot$Pred, na.rm = TRUE), linetype = &quot;dashed&quot;) + labs(x = &quot;Parameter estimate&quot;, y = &quot;Body weight&#39;s importance&quot;) + theme_minimal() 13.6 Create table with HMSC results # Total relative abundance of species associated positively and negatively with body weight (~9%) sum(toplot$rel_abu[(toplot$bw_support &gt; 0.975 | toplot$bw_support &lt; 0.025) &amp; (toplot$var_pred &gt; mean(toplot$var_pred))]) # Total relative abundance of species associated positively with body weight (&lt;1%) sum(toplot$rel_abu[(toplot$bw_support &gt; 0.975) &amp; (toplot$var_pred &gt; mean(toplot$var_pred))]) # Total relative abundance of species associated negatively with body weight (&gt;8%) sum(toplot$rel_abu[(toplot$bw_support &lt; 0.025 | toplot$bw_support &lt; 0.025) &amp; (toplot$var_pred &gt; mean(toplot$var_pred))]) # Phylogenetic signal mpost &lt;- convertToCodaObject(m) quantile(unlist(mpost$Rho), probs = c(.05,.5,.95)) bw_parameter &lt;- beta_post$mean[4,] bw_parameter_phyloSorted &lt;- data.frame(bw_parameter = bw_parameter[ match(m$phyloTree$tip.label, names(bw_parameter))]) mean(rownames(bw_parameter_phyloSorted) == m$phyloTree$tip.label) new_tree &lt;- m$phyloTree new_tree$node.label &lt;- NULL obj &lt;- phylo4d(new_tree, tip.data = bw_parameter_phyloSorted) barplot.phylo4d(obj) bw.cg &lt;- phyloCorrelogram(obj, trait = &quot;bw_parameter&quot;) saveRDS(bw.cg,file = file.path(PanelDir,&quot;bw.cg.rds&quot;)) bw.cg &lt;- readRDS(file = file.path(PanelDir,&quot;bw.cg.rds&quot;)) plot(bw.cg) bw_parameter_df &lt;- data.frame(genome = names(bw_parameter), bw_response = bw_parameter) bw_parameter_df$bw_trend &lt;- NA bw_parameter_df$bw_trend[beta_post$support[4,] &gt; 0.95] &lt;- &quot;positive&quot; bw_parameter_df$bw_trend[beta_post$support[4,] &lt; 0.05] &lt;- &quot;negative&quot; bw_parameter_df$bw_trend[is.na(bw_parameter_df$bw_trend)] &lt;- &quot;neutral&quot; write_tsv(bw_parameter_df,file = &quot;data/hmsc_bw_trend.tsv&quot;) rm(list = ls()) "],["comparing-metabolic-capacity-of-positively-and-negatively-associated-bacteria.html", "Chapter 14 Comparing metabolic capacity of positively and negatively associated bacteria 14.1 Load MG data 14.2 Taxonomy of positively and negatively associated MAGs 14.3 Compute MCIs of BW positive and negative associated communities 14.4 Heatmap of MCI at element level", " Chapter 14 Comparing metabolic capacity of positively and negatively associated bacteria 14.1 Load MG data load(&quot;data/data_mg.Rdata&quot;) trends_bw &lt;- read_tsv(&quot;data/hmsc_bw_trend.tsv&quot;) %&gt;% mutate(trend_07 = case_when(bw_support &gt; 0.85 ~ &#39;positive&#39;, bw_support &lt; 0.15 ~ &#39;negative&#39;, TRUE ~ &#39;non-significant&#39;)) %&gt;% mutate(trend_09 = case_when(bw_support &gt; 0.95 ~ &#39;positive&#39;, bw_support &lt; 0.05 ~ &#39;negative&#39;, TRUE ~ &#39;non-significant&#39;)) gifts &lt;- gifts_elements %&gt;% as.data.frame() %&gt;% select(where(~ sum(.) &gt; 0)) gifts_funct &lt;- gifts_functions %&gt;% as.data.frame() %&gt;% select(where(~ sum(.) &gt; 0)) avg_mci &lt;- rowMeans(gifts) gifts_funct$avg_mci &lt;- avg_mci avg_mci_bio &lt;- rowMeans(gifts[,grepl(&quot;B&quot;,names(gifts))]) gifts_funct$avg_mci_bio &lt;- avg_mci_bio avg_mci_deg &lt;- rowMeans(gifts[,grepl(&quot;D&quot;,names(gifts))]) gifts_funct$avg_mci_deg &lt;- avg_mci_deg gift_colors &lt;- read_tsv(&quot;data/gift_colors.tsv&quot;) %&gt;% mutate(legend = str_c(Code_function, &quot; - &quot;, Function)) 14.2 Taxonomy of positively and negatively associated MAGs 14.2.1 Positive group All MAGs with positive association belong to RF39 trends_bw %&gt;% filter(trend_09 == &quot;positive&quot;) %&gt;% select(genome) %&gt;% left_join(genome_taxonomy, by = &#39;genome&#39;) %&gt;% select(order) %&gt;% table() order RF39 10 14.2.2 Negative group MAGs with negative association belong to various orders, mainly to Lachnospirales and Oscillospirales trends_bw %&gt;% filter(trend_09 == &quot;negative&quot;) %&gt;% select(genome) %&gt;% left_join(genome_taxonomy, by = &#39;genome&#39;) %&gt;% select(order) %&gt;% table() %&gt;% sort() order Actinomycetales Campylobacterales Monoglobales_A Opitutales RF39 Saccharimonadales RF32 TANB77 1 1 1 1 1 1 4 4 Coriobacteriales Bacteroidales Erysipelotrichales Lactobacillales Christensenellales Oscillospirales Lachnospirales 5 8 8 12 27 35 81 14.3 Compute MCIs of BW positive and negative associated communities gifts_funct_bw_pos &lt;- gifts_funct %&gt;% mutate(avg_mci_bio = gifts_funct$avg_mci_bio, avg_mci_deg = gifts_funct$avg_mci_deg, bw_effect = trends_bw$trend_09) %&gt;% filter(bw_effect == &quot;positive&quot;) %&gt;% select(-bw_effect) gifts_funct_bw_neu &lt;- gifts_funct %&gt;% mutate(avg_mci_bio = gifts_funct$avg_mci_bio, avg_mci_deg = gifts_funct$avg_mci_deg, bw_effect = trends_bw$trend_09) %&gt;% filter(bw_effect == &quot;non-significant&quot;) %&gt;% select(-bw_effect) gifts_funct_bw_neg &lt;- gifts_funct %&gt;% mutate(avg_mci_bio = gifts_funct$avg_mci_bio, avg_mci_deg = gifts_funct$avg_mci_deg, bw_effect = trends_bw$trend_09) %&gt;% filter(bw_effect == &quot;negative&quot;) %&gt;% select(-bw_effect) mean_func &lt;- function(data, indices) { return(mean(data[indices])) } boot_pos_df &lt;- data.frame(matrix(nrow = ncol(gifts_funct_bw_pos), ncol = 4)) colnames(boot_pos_df) &lt;- c(&quot;function_id&quot;, &quot;mean&quot;, &quot;ci_05&quot;, &quot;ci_95&quot;) boot_neu_df &lt;- data.frame(matrix(nrow = ncol(gifts_funct_bw_neu), ncol = 4)) colnames(boot_neu_df) &lt;- c(&quot;function_id&quot;, &quot;mean&quot;, &quot;ci_05&quot;, &quot;ci_95&quot;) boot_neg_df &lt;- data.frame(matrix(nrow = ncol(gifts_funct_bw_neg), ncol = 4)) colnames(boot_neg_df) &lt;- c(&quot;function_id&quot;, &quot;mean&quot;, &quot;ci_05&quot;, &quot;ci_95&quot;) for(i in 1:ncol(gifts_funct_bw_pos)){ boot_pos_df[i, &quot;function_id&quot;] &lt;- colnames(gifts_funct_bw_pos)[i] if(sum(gifts_funct_bw_pos[, i]) == 0){ boot_pos_df[i, &quot;mean&quot;] &lt;- 0 boot_pos_df[i, &quot;ci_05&quot;] &lt;- 0 boot_pos_df[i, &quot;ci_95&quot;] &lt;- 0 } else{ boot_temp_pos &lt;- boot(gifts_funct_bw_pos[, i], statistic = mean_func, R = 10000) boot_temp_pos_ci &lt;- boot.ci(boot_temp_pos, type = &quot;bca&quot;) boot_pos_df[i, &quot;mean&quot;] &lt;- boot_temp_pos_ci$t0 boot_pos_df[i, &quot;ci_05&quot;] &lt;- boot_temp_pos_ci$bca[4] boot_pos_df[i, &quot;ci_95&quot;] &lt;- boot_temp_pos_ci$bca[5] } boot_neu_df[i, &quot;function_id&quot;] &lt;- colnames(gifts_funct_bw_neu)[i] boot_temp_neu &lt;- boot(gifts_funct_bw_neu[, i], statistic = mean_func, R = 10000) boot_temp_neu_ci &lt;- boot.ci(boot_temp_neu, type = &quot;bca&quot;) boot_neu_df[i, &quot;mean&quot;] &lt;- boot_temp_neu_ci$t0 boot_neu_df[i, &quot;ci_05&quot;] &lt;- boot_temp_neu_ci$bca[4] boot_neu_df[i, &quot;ci_95&quot;] &lt;- boot_temp_neu_ci$bca[5] boot_neg_df[i, &quot;function_id&quot;] &lt;- colnames(gifts_funct_bw_neg)[i] boot_temp_neg &lt;- boot(gifts_funct_bw_neg[, i], statistic = mean_func, R = 10000) boot_temp_neg_ci &lt;- boot.ci(boot_temp_neg, type = &quot;bca&quot;) boot_neg_df[i, &quot;mean&quot;] &lt;- boot_temp_neg_ci$t0 boot_neg_df[i, &quot;ci_05&quot;] &lt;- boot_temp_neg_ci$bca[4] boot_neg_df[i, &quot;ci_95&quot;] &lt;- boot_temp_neg_ci$bca[5] } boot_df &lt;- data.frame(rbind(boot_pos_df %&gt;% mutate(bw_association = &quot;postive&quot;), boot_neu_df %&gt;% mutate(bw_association = &quot;non-significant&quot;), boot_neg_df %&gt;% mutate(bw_association = &quot;negative&quot;))) gifts_funct_df &lt;- data.frame(rbind(gifts_funct_bw_pos %&gt;% mutate(bw_association = &quot;postive&quot;), gifts_funct_bw_neu %&gt;% mutate(bw_association = &quot;non-significant&quot;), gifts_funct_bw_neg %&gt;% mutate(bw_association = &quot;negative&quot;))) 14.3.1 MCI comparisons of biosynthesis pathways ## B01 p_B01_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = B01, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = B01, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;B01&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## B02 p_B02_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = B02, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = B02, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;B02&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## B03 p_B03_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = B03, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = B03, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data=boot_df %&gt;% filter(function_id==&quot;B03&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association,color=bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35))+ scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal()+ theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## B04 p_B04_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = B04, color = bw_association), alpha = 0.5, width = 0.25)+ geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = B04, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;B04&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## B06 p_B06_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = B06, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = B06, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;B06&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## B07 p_B07_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = B07, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = B07, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;B07&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## B08 p_B08_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = B08, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = B08, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;B08&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## B09 p_B09_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = B09, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = B09, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;B09&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## B10 p_B10_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = B10, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = B10, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;B10&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## Avg. MCI Biosynthesis p_Mci_bio_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = avg_mci_bio, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = avg_mci_bio, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;avg_mci_bio&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + ylab(&quot;Avg. bio. MCI&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## Avg. MCI p_Mci_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = avg_mci, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = avg_mci, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;avg_mci&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + ylab(&quot;Avg. MCI&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) 14.3.2 The significant ones grid.arrange(p_Mci_mg, p_B04_mg, p_B08_mg, ncol = 3) 14.3.3 All grid.arrange(p_Mci_bio_mg, p_B01_mg, p_B02_mg, p_B03_mg, p_B04_mg, p_B06_mg, p_B07_mg, p_B08_mg, p_B09_mg, p_B10_mg, ncol = 3) 14.3.3.1 MCI comparisons of degradation pathways ## D01 p_D01_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = D01, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = D01, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;D01&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## D02 p_D02_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = D02, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = D02, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;D02&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## D03 p_D03_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = D03, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = D03, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;D03&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size =14)) ## D05 p_D05_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = D05, color = bw_association), alpha = 0.5,width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = D05, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;D05&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## D06 p_D06_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = D06, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = D06, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;D06&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## D07 p_D07_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = D07, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = D07, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;D07&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## D08 p_D08_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = D08, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = D08, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;D08&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## D09 p_D09_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = D09, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = D09, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;D09&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) ## Avg. MCI Degradation p_Mci_deg_mg &lt;- ggplot() + geom_jitter(data = gifts_funct_df, aes(x = bw_association, y = avg_mci_deg, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(data = gifts_funct_df, aes(x = bw_association, y = avg_mci_deg, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_df %&gt;% filter(function_id == &quot;avg_mci_deg&quot;), aes(ymin = ci_05, ymax = ci_95, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;grey50&quot;,&quot;blue3&quot;)) + xlab(&quot;Body-weight association&quot;) + ylab(&quot;Avg. deg. MCI&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 14), axis.text.x = element_text(size = 8), axis.text.y = element_text(size = 12), axis.title.y = element_text(size = 14)) 14.3.4 All grid.arrange(p_Mci_deg_mg, p_D01_mg, p_D02_mg, p_D03_mg, p_D05_mg, p_D06_mg, p_D07_mg, p_D08_mg, p_D09_mg, ncol = 3) 14.4 Heatmap of MCI at element level Not included in Supplementary. gifts_bw_pos &lt;- gifts %&gt;% mutate(bw_effect = trends_bw$trend_09) %&gt;% filter(bw_effect == &quot;positive&quot;) %&gt;% select(-bw_effect) gifts_bw_neu &lt;- gifts %&gt;% mutate(bw_effect = trends_bw$trend_09) %&gt;% filter(bw_effect == &quot;non-significant&quot;) %&gt;% select(-bw_effect) n_neg_sp &lt;- 50 gifts_bw_neg &lt;- gifts %&gt;% mutate(bw_effect = trends_bw$trend_09, bw_param = trends_bw$parameter) %&gt;% filter(bw_effect == &quot;negative&quot;) %&gt;% arrange(bw_param) %&gt;% slice(1:n_neg_sp) %&gt;% select(-c(bw_effect, bw_param)) gifts_bw_df_long &lt;- data.frame(rbind(gifts_bw_pos, gifts_bw_neg)) %&gt;% mutate(bw_association = c(rep(&quot;positive&quot;, nrow(gifts_bw_pos)), rep(&quot;negative&quot;, nrow(gifts_bw_neg)))) %&gt;% select(-matches(&quot;S0&quot;)) %&gt;% rownames_to_column(var = &quot;genome&quot;) %&gt;% pivot_longer(!c(genome, bw_association), names_to = &quot;Element&quot;, values_to = &quot;mci&quot;) %&gt;% mutate(Function = substr(Element, start = 1, stop = 3)) %&gt;% relocate(Function, .after = Element) # Heatmap gifts_bw_df_long %&gt;% rename(Code_element = &quot;Element&quot;) %&gt;% rename(Code_function = &quot;Function&quot;) %&gt;% left_join(gift_colors, by = &quot;Code_function&quot;) %&gt;% group_by(Code_element) %&gt;% filter(sum(mci) &gt; 0) %&gt;% ungroup() %&gt;% ggplot(., aes(x = genome, y = Code_element, fill = bw_association, group = legend, alpha = mci)) + geom_tile(color = &quot;#ffffff&quot;) + scale_y_discrete(guide = guide_axis(check.overlap = TRUE)) + scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) + scale_fill_manual(values = c(&quot;red3&quot;, &quot;blue3&quot;), na.value = &quot;#f4f4f4&quot;) + facet_grid(legend ~ bw_association, scales = &quot;free&quot;, space = &quot;free&quot;) + theme_void(base_size = 8) + theme(axis.text.y = element_blank(), strip.text.y = element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 6), legend.position = &quot;none&quot;) rm(list = ls()) "],["comparing-activity-of-positively-and-negatively-associated-bacteria.html", "Chapter 15 Comparing activity of positively and negatively associated bacteria 15.1 Load data 15.2 Expression profiles of positively and negatively associated bacteria 15.3 Taxonomy of reduced MAGs 15.4 Genomic characteristics of genome reduced MAGs", " Chapter 15 Comparing activity of positively and negatively associated bacteria 15.1 Load data load(&quot;data/data_mt.Rdata&quot;) load(&quot;data/data_mg.Rdata&quot;) trends_bw &lt;- read_tsv(&quot;data/hmsc_bw_trend.tsv&quot;) %&gt;% mutate(trend_07 = case_when(bw_support &gt; 0.85 ~ &#39;positive&#39;, bw_support &lt; 0.15 ~ &#39;negative&#39;, TRUE ~ &#39;non-significant&#39;)) %&gt;% mutate(trend_09 = case_when(bw_support &gt; 0.95 ~ &#39;positive&#39;, bw_support &lt; 0.05 ~ &#39;negative&#39;, TRUE ~ &#39;non-significant&#39;)) gift_colors &lt;- read_tsv(&quot;data/gift_colors.tsv&quot;) %&gt;% mutate(legend = str_c(Code_function, &quot; - &quot;, Function)) 15.2 Expression profiles of positively and negatively associated bacteria The resulting plot corresponds to Figure 3c in the manuscript. 15.2.1 Element-based expression table of day 35 individuals mag_elements &lt;- lapply(expr_counts, function(x) to.elements(x, GIFT_db2)) # Convert correct tibble for applying CLR conversion mag_elements_merged &lt;- mag_elements %&gt;% lapply(function(x) t(x)) %&gt;% lapply(function(x) as.data.frame(x)) %&gt;% Map(cbind, ., MAG = names(.)) %&gt;% lapply(function(x) rownames_to_column(x, &quot;Element&quot;)) %&gt;% do.call(rbind, .) %&gt;% mutate(Function = substr(Element, start = 1, stop = 3))%&gt;% as.data.frame() %&gt;% relocate(MAG, .before = Element) %&gt;% relocate(Function, .after = Element) # Select individuals from day 35 metadata_day_35 &lt;- chicken_metadata_mt %&gt;% filter(sampling_time == &quot;35&quot;) mag_elements_day_35 &lt;- mag_elements_merged %&gt;% select(MAG, Element, Function, metadata_day_35$animal_code) metadata_mt &lt;- metadata_day_35 %&gt;% arrange(match(metadata_day_35$animal_code, colnames(mag_elements_day_35[,-c(1,3)]))) mean(metadata_mt$animal_code == colnames(mag_elements_day_35[,-c(1:3)])) [1] 1 15.2.2 Normalised expression table normalisation_factor &lt;- expr_counts %&gt;% # Normalisation is performed with dist_expr because it contains the transcripts for all the functions, not only the functions considered important for the host in distillR. lapply(function(x) rowSums(x)) %&gt;% reduce(cbind) %&gt;% rowSums() normalisation_factor &lt;- normalisation_factor[match(metadata_mt$animal_code,names(normalisation_factor))] mean(names(normalisation_factor) == metadata_mt$animal_code) [1] 1 # Normalised relative expression norm_elements_day_35 &lt;- sweep(mag_elements_day_35[,-c(1:3)], 2, normalisation_factor, FUN = &quot;/&quot;) norm_elements_day_35 &lt;- data.frame(mag_elements_day_35[,c(1:3)], norm_elements_day_35) 15.2.3 Filter MAGs associated with chicken body weight positive_mags &lt;- trends_bw %&gt;% filter(trend_09 == &quot;positive&quot;) %&gt;% select(genome) %&gt;% unlist() %&gt;% as.character() negative_mags &lt;- trends_bw %&gt;% filter(trend_09 == &quot;negative&quot;) %&gt;% select(genome) %&gt;% unlist() %&gt;% as.character() n_neg_sp &lt;- 50 # Filter 50 negative MAGs for the figure negative_mags_top50 &lt;- trends_bw %&gt;% filter(trend_09 == &quot;negative&quot;) %&gt;% arrange(parameter) %&gt;% slice(1:n_neg_sp) %&gt;% select(genome) %&gt;% unlist() %&gt;% as.character() mag_subset_elements &lt;- norm_elements_day_35 %&gt;% filter(MAG %in% c(positive_mags, negative_mags)) mag_subset_element_top50s &lt;- norm_elements_day_35 %&gt;% filter(MAG %in% c(positive_mags, negative_mags_top50)) 15.2.4 Tidy data # Filter relative abundance table mag_weighted_day35 &lt;- mag_weighted %&gt;% t() %&gt;% as.data.frame() %&gt;% rownames_to_column(var = &#39;animal_code&#39;) %&gt;% filter(animal_code %in% colnames(mag_subset_elements[, -c(1:3)])) %&gt;% column_to_rownames(var = &quot;animal_code&quot;) total_day35 &lt;- t(decostand(mag_weighted_day35, &quot;total&quot;)) %&gt;% as.data.frame() %&gt;% rownames_to_column(var = &quot;genome&quot;) %&gt;% filter(genome %in% c(positive_mags, negative_mags)) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% mutate(mean_abundance = rowMeans(.)) %&gt;% rownames_to_column(var = &quot;genome&quot;) %&gt;% select(genome, mean_abundance) mag_subset_elements_2 &lt;- mag_subset_element_top50s %&gt;% rename(genome = &#39;MAG&#39;) %&gt;% left_join(total_day35, by = &quot;genome&quot;) %&gt;% mutate(across(CA01.15:CB24.14, ~ .x / mean_abundance)) %&gt;% select(-mean_abundance) %&gt;% mutate(bw_association = if_else(genome %in% positive_mags, &quot;positive&quot;, &quot;negative&quot;)) %&gt;% mutate(avg_expr_million = rowMeans(across(CA01.15:CB24.14)) * 1000000) %&gt;% filter(!grepl(&quot;S&quot;, Function)) %&gt;% group_by(Element) %&gt;% filter(sum(avg_expr_million) &gt; 0) %&gt;% ungroup() %&gt;% group_by(genome) %&gt;% filter(sum(avg_expr_million) &gt; 0) %&gt;% ungroup() mag_subset_elements_3 &lt;- mag_subset_elements %&gt;% rename(genome = &#39;MAG&#39;) %&gt;% left_join(total_day35, by = &quot;genome&quot;) %&gt;% mutate(across(CA01.15:CB24.14, ~ .x / mean_abundance)) %&gt;% select(-mean_abundance) %&gt;% mutate(bw_association = if_else(genome %in% positive_mags, &quot;positive&quot;, &quot;negative&quot;)) %&gt;% mutate(avg_expr_million = rowMeans(across(CA01.15:CB24.14)) * 1000000) %&gt;% filter(!grepl(&quot;S&quot;, Function)) %&gt;% group_by(Element) %&gt;% filter(sum(avg_expr_million) &gt; 0) %&gt;% ungroup() %&gt;% group_by(genome) %&gt;% filter(sum(avg_expr_million) &gt; 0) %&gt;% ungroup() 15.2.5 Plot mag_subset_elements_2 %&gt;% rename(Code_function = &quot;Function&quot;) %&gt;% left_join(gift_colors, by = &quot;Code_function&quot;) %&gt;% ggplot(aes(x = genome, y = Element, fill = bw_association, group = legend, alpha = log(avg_expr_million, 2))) + geom_tile(color = &quot;#ffffff&quot;) + scale_y_discrete(guide = guide_axis(check.overlap = TRUE)) + scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) + scale_fill_manual(values = c(&quot;red3&quot;, &quot;blue3&quot;), na.value = &quot;#f4f4f4&quot;) + facet_grid(legend ~ bw_association, scales = &quot;free&quot;, space = &quot;free&quot;) + theme_void(base_size = 8) + theme(axis.text.x = element_text(size = 5, angle = 90), axis.text.y = element_text(size = 5), strip.text.y = element_blank(), legend.position = &quot;none&quot;) 15.3 Taxonomy of reduced MAGs reduced_mags1 &lt;- mag_subset_elements_3 %&gt;% filter(Element == &quot;B0101&quot;) %&gt;% filter(avg_expr_million == 0) %&gt;% select(genome) %&gt;% unlist() %&gt;% as.character() reduced_mags2 &lt;- mag_subset_elements_3 %&gt;% filter(Element == &quot;B0102&quot;) %&gt;% filter(avg_expr_million == 0) %&gt;% select(genome) %&gt;% unlist() %&gt;% as.character() reduced_mags3 &lt;- mag_subset_elements_3 %&gt;% filter(Element == &quot;B0103&quot;) %&gt;% filter(avg_expr_million == 0) %&gt;% select(genome) %&gt;% unlist() %&gt;% as.character() reduced_mags &lt;- intersect(intersect(reduced_mags1, reduced_mags2), reduced_mags3) reduced_mags_df &lt;- mag_subset_elements_3 %&gt;% filter(genome %in% reduced_mags) %&gt;% group_by(Element) %&gt;% filter(sum(avg_expr_million) &gt; 0) %&gt;% ungroup() %&gt;% group_by(genome) %&gt;% filter(sum(avg_expr_million) &gt; 0) %&gt;% ungroup()%&gt;% pivot_wider(id_cols = c(genome, bw_association), names_from = Element, values_from = avg_expr_million) All reduced MAGs with positive association belong to RF39 positives &lt;- reduced_mags_df %&gt;% filter(bw_association == &quot;positive&quot;) %&gt;% select(genome) %&gt;% unlist() %&gt;% as.character() genome_taxonomy[genome_taxonomy$genome %in% positives,] %&gt;% select(order) %&gt;% table() order RF39 10 genome_taxonomy[genome_taxonomy$genome %in% positives,] %&gt;% select(family) %&gt;% table() family UBA660 10 Reduced MAGs with negative association belong to various orders, mainly to Christensenellales negatives &lt;- reduced_mags_df %&gt;% filter(bw_association == &quot;negative&quot;) %&gt;% select(genome) %&gt;% unlist() %&gt;% as.character() genome_taxonomy[genome_taxonomy$genome %in% negatives,] %&gt;% select(order) %&gt;% table() order Bacteroidales Christensenellales Coriobacteriales Lachnospirales Monoglobales_A Oscillospirales Saccharimonadales 1 12 1 1 1 1 1 genome_taxonomy[genome_taxonomy$genome %in% negatives,] %&gt;% select(family) %&gt;% table() family Acutalibacteraceae Atopobiaceae Borkfalkiaceae Lachnospiraceae Rikenellaceae Saccharimonadaceae UBA1242 UBA1381 1 1 1 1 1 1 11 1 15.4 Genomic characteristics of genome reduced MAGs The resulting plot corresponds to Figure 4a. gifts &lt;- gifts_elements %&gt;% as.data.frame() %&gt;% select(where(~ sum(.) &gt; 0)) mci_df &lt;- gifts %&gt;% filter(rownames(.) %in% reduced_mags_df$genome) %&gt;% mutate(avg_mci = rowMeans(.)) %&gt;% rownames_to_column(var = &quot;genome&quot;) %&gt;% left_join(reduced_mags_df, by = &quot;genome&quot;) %&gt;% left_join(genome_taxonomy, by = &quot;genome&quot;) %&gt;% filter(family==&quot;UBA1242&quot;| order==&quot;RF39&quot;) %&gt;% select(genome, avg_mci, bw_association) length_df &lt;- genome_stats %&gt;% filter(genome %in% reduced_mags_df$genome) %&gt;% left_join(mci_df, by = &quot;genome&quot;) %&gt;% left_join(genome_taxonomy, by = &quot;genome&quot;) %&gt;% filter(family==&quot;UBA1242&quot;|order==&quot;RF39&quot;) %&gt;% select(genome, mag_length, bw_association) mean_func &lt;- function(data, indices) { return(mean(data[indices])) } boot_mci_df &lt;- data.frame(matrix(nrow = 2, ncol = 4)) colnames(boot_mci_df) &lt;-c (&quot;bw_association&quot;,&quot;mean&quot;,&quot;ci_025&quot;,&quot;ci_975&quot;) boot_mci_df$bw_association &lt;- c(&quot;positive&quot;,&quot;negative&quot;) bw_pos_redMAG_mci_boot &lt;- boot(mci_df$avg_mci[mci_df$bw_association == &quot;positive&quot;], statistic = mean_func, R = 10000) bw_pos_redMAG_mci_boot_ci &lt;- boot.ci(bw_pos_redMAG_mci_boot, type = &quot;bca&quot;) bw_neg_redMAG_mci_boot&lt;-boot(mci_df$avg_mci[mci_df$bw_association == &quot;negative&quot;], statistic = mean_func, R = 10000) bw_neg_redMAG_mci_boot_ci&lt;-boot.ci(bw_neg_redMAG_mci_boot, type = &quot;bca&quot;) boot_mci_df[1,&quot;mean&quot;] &lt;- bw_pos_redMAG_mci_boot$t0 boot_mci_df[1,&quot;ci_025&quot;] &lt;- bw_pos_redMAG_mci_boot_ci$bca[,4] boot_mci_df[1,&quot;ci_975&quot;] &lt;- bw_pos_redMAG_mci_boot_ci$bca[,5] boot_mci_df[2,&quot;mean&quot;] &lt;- bw_neg_redMAG_mci_boot$t0 boot_mci_df[2,&quot;ci_025&quot;] &lt;- bw_neg_redMAG_mci_boot_ci$bca[,4] boot_mci_df[2,&quot;ci_975&quot;] &lt;- bw_neg_redMAG_mci_boot_ci$bca[,5] mci_df %&gt;% ggplot()+ geom_jitter(aes(x = bw_association, y = avg_mci, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(aes(x = bw_association, y = avg_mci, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_mci_df, aes(ymin = ci_025, ymax = ci_975, x = bw_association, color = bw_association), linewidth = 4, size = 1, position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;blue3&quot;)) + ylab(&quot;Avg. MCI&quot;)+ xlab(&quot;Body-weight association&quot;)+ theme_minimal()+ theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 12), axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12)) 15.4.1 Genome length of genome reduced MAGss The resulting plot corresponds to Figure 4b. boot_length_df &lt;- data.frame(matrix(nrow = 2, ncol = 4)) colnames(boot_length_df) &lt;- c(&quot;bw_association&quot;, &quot;mean&quot;, &quot;ci_025&quot;, &quot;ci_975&quot;) boot_length_df$bw_association &lt;- c(&quot;positive&quot;, &quot;negative&quot;) bw_pos_red_mag_length_boot &lt;- boot(length_df$mag_length[length_df$bw_association == &quot;positive&quot;], statistic = mean_func, R = 10000) bw_pos_red_mag_length_boot_ci &lt;- boot.ci(bw_pos_red_mag_length_boot, type = &quot;bca&quot;) bw_neg_red_mag_length_boot &lt;- boot(length_df$mag_length[length_df$bw_association == &quot;negative&quot;], statistic = mean_func, R = 10000) bw_neg_red_mag_length_boot_ci &lt;- boot.ci(bw_neg_red_mag_length_boot, type = &quot;bca&quot;) boot_length_df[1, &quot;mean&quot;] &lt;- bw_pos_red_mag_length_boot$t0 boot_length_df[1, &quot;ci_025&quot;] &lt;- bw_pos_red_mag_length_boot_ci$bca[,4] boot_length_df[1, &quot;ci_975&quot;] &lt;- bw_pos_red_mag_length_boot_ci$bca[,5] boot_length_df[2, &quot;mean&quot;] &lt;- bw_neg_red_mag_length_boot$t0 boot_length_df[2, &quot;ci_025&quot;] &lt;- bw_neg_red_mag_length_boot_ci$bca[,4] boot_length_df[2, &quot;ci_975&quot;] &lt;- bw_neg_red_mag_length_boot_ci$bca[,5] length_df %&gt;% ggplot() + geom_jitter(aes(x = bw_association, y = mag_length, color = bw_association), alpha = 0.5, width = 0.25) + geom_boxplot(aes(x = bw_association, y = mag_length, fill = bw_association), alpha = 0.1, outlier.shape = NA, width = 0.5) + geom_linerange(data = boot_length_df, aes(ymin = ci_025, ymax = ci_975, x = bw_association, color = bw_association), linewidth = 4, size = 1,position = position_nudge(x = 0.35)) + scale_color_manual(values = c(&quot;red3&quot;,&quot;blue3&quot;)) + scale_fill_manual(values = c(&quot;red3&quot;,&quot;blue3&quot;)) + ylab(&quot;MAG length&quot;) + xlab(&quot;Body-weight association&quot;) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 12), axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10), axis.title.y = element_text(size = 12)) 15.4.2 Expression profiles of genome reduced MAGs The resulting plot corresponds to Figure 4c. comp_reduced_mags &lt;- reduced_mags_df %&gt;% left_join(genome_taxonomy, by = &#39;genome&#39;) %&gt;% filter(family==&quot;UBA1242&quot;|order==&quot;RF39&quot;) %&gt;% select(-domain:-species) reduced_mags_dist &lt;- vegdist(sqrt(comp_reduced_mags[, -c(1:3)]), method = &quot;bray&quot;) pcoa_reduced_mags &lt;- cmdscale(reduced_mags_dist, eig = TRUE, k = 3, add = TRUE) pcoa_reduced_mags_df &lt;- pcoa_reduced_mags$points %&gt;% as.data.frame() %&gt;% mutate(genome = comp_reduced_mags$genome) %&gt;% mutate(bw_association = comp_reduced_mags$bw_association) %&gt;% rename(PCOA1 = &#39;V1&#39;, PCOA2 = &#39;V2&#39;, PCOA3 = &#39;V3&#39;) envfit_gifts &lt;- envfit(pcoa_reduced_mags_df[, 1:2], sqrt(comp_reduced_mags[, -c(1,2)]), permutations = 999) envfit_gifts_df &lt;- as.data.frame(scores(envfit_gifts, display = &quot;vectors&quot;)) %&gt;% rownames_to_column(.,var = &quot;gift_id&quot;) %&gt;% mutate(pval = envfit_gifts$vectors$pvals) %&gt;% filter(pval &lt; 0.05) %&gt;% select(gift_id, PCOA1, PCOA2) ggplot() + geom_point(data = pcoa_reduced_mags_df, aes(x = PCOA1, y = PCOA2, color = bw_association), size = 2, shape = 16, alpha = 0.8) + scale_color_manual(values = c(&quot;red3&quot;,&quot;blue3&quot;)) + geom_segment(data = envfit_gifts_df, aes(x = 0, xend = PCOA1*0.5, y = 0 , yend = PCOA2*0.5), arrow = arrow(length = unit(0.25, &quot;cm&quot;)), color=&quot;gray20&quot;, linewidth = 0.2) + geom_label_repel(data = envfit_gifts_df, aes(x = PCOA1*0.5, y = PCOA2*0.5, label = gift_id), size = 1, max.overlaps = 10) + theme_minimal() + theme(legend.position = &#39;none&#39;, axis.title.x = element_text(size = 12), axis.title.y = element_text(size = 12), axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10)) 15.4.3 Activity heatmap of genome reduced bacteria mag_subset_elements_3 %&gt;% rename(Code_element = &quot;Element&quot;) %&gt;% rename(Code_function = &quot;Function&quot;) %&gt;% left_join(GIFT_db2 %&gt;% select (Code_element, Code_function, Element, Function)) %&gt;% left_join(gift_colors, by = &quot;Code_function&quot;) %&gt;% left_join(genome_taxonomy, by = &#39;genome&#39;) %&gt;% filter(family == &quot;UBA1242&quot; | family == &quot;UBA660&quot;) %&gt;% select(-domain:-species) %&gt;% group_by(Element) %&gt;% filter(sum(avg_expr_million) &gt; 0) %&gt;% ungroup() %&gt;% group_by(genome) %&gt;% filter(sum(avg_expr_million) &gt; 0) %&gt;% ungroup() %&gt;% ggplot(aes(x = genome, y = Code_element, fill = bw_association, group = legend, alpha = log(avg_expr_million, 2))) + geom_tile(color = &quot;#ffffff&quot;) + scale_y_discrete(guide = guide_axis(check.overlap = TRUE)) + scale_x_discrete(guide = guide_axis(check.overlap = TRUE)) + scale_fill_manual(values = c(&quot;red3&quot;, &quot;blue3&quot;), na.value = &quot;#f4f4f4&quot;) + facet_grid(legend ~ bw_association, scales = &quot;free&quot;, space = &quot;free&quot;) + theme_void(base_size = 8) + theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 1), axis.text.y = element_text(size = 5, vjust = 0, hjust = 1), strip.text.y = element_blank(), legend.position = &quot;none&quot;) rm(list = ls()) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
